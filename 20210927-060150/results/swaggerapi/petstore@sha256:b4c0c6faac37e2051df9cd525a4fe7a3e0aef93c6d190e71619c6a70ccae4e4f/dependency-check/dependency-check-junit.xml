<?xml version="1.0" encoding="UTF-8"?><testsuites failures="91" name="dependency-check" tests="82"><testsuite failures="0" id="0" name="/tmp/image-unpacked/usr/local/openjdk-8/lib/security/policy/unlimited/US_export_policy.jar" package="US_export_policy.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="US_export_policy.jar"/></testsuite><testsuite failures="0" id="1" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/activation-1.1.jar" package="activation-1.1.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="activation-1.1.jar"/></testsuite><testsuite failures="0" id="2" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/animal-sniffer-annotations-1.17.jar" package="animal-sniffer-annotations-1.17.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="animal-sniffer-annotations-1.17.jar"/></testsuite><testsuite failures="0" id="3" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/asm-3.1.jar" package="asm-3.1.jar" skipped="1" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="CVE-2007-0156" name="pkg:maven/asm/asm@3.1"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>M-Core stores the database under the web document root, which allows remote attackers to obtain sensitive information via a direct request to db/uyelik.mdb.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/asm-3.1.jar</system-err></testcase></testsuite><testsuite failures="0" id="4" name="/tmp/image-unpacked/usr/local/openjdk-8/lib/charsets.jar" package="charsets.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="charsets.jar"/></testsuite><testsuite failures="0" id="5" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/checker-compat-qual-2.5.2.jar" package="checker-compat-qual-2.5.2.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="checker-compat-qual-2.5.2.jar"/></testsuite><testsuite failures="0" id="6" name="/tmp/image-unpacked/usr/local/openjdk-8/lib/ext/cldrdata.jar" package="cldrdata.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="cldrdata.jar"/></testsuite><testsuite failures="0" id="7" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/commons-io-1.3.2.jar" package="commons-io-1.3.2.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="commons-io-1.3.2.jar"/></testsuite><testsuite failures="0" id="8" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/commons-lang3-3.2.1.jar" package="commons-lang3-3.2.1.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="commons-lang3-3.2.1.jar"/></testsuite><testsuite failures="0" id="9" name="/tmp/image-unpacked/usr/local/openjdk-8/lib/ext/dnsns.jar" package="dnsns.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="dnsns.jar"/></testsuite><testsuite failures="0" id="10" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/error_prone_annotations-2.2.0.jar" package="error_prone_annotations-2.2.0.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="error_prone_annotations-2.2.0.jar"/></testsuite><testsuite failures="0" id="11" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/failureaccess-1.0.1.jar" package="failureaccess-1.0.1.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="failureaccess-1.0.1.jar"/></testsuite><testsuite failures="1" id="12" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/guava-27.0.1-android.jar" package="guava-27.0.1-android.jar" skipped="1" tests="2" timestamp="2021-09-27T06:07:56.437852"><testcase classname="CVE-2020-8908" name="pkg:maven/com.google.guava/guava@27.0.1-android"><failure message="cvssV3: LOW, score: 3.3 (CVSS:/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N)"/><system-out>A temp directory creation vulnerability exists in all versions of Guava, allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava API com.google.common.io.Files.createTempDir(). By default, on unix-like systems, the created directory is world-readable (readable by an attacker with access to the system). The method in question has been marked @Deprecated in versions 30.0 and later and should not be used. For Android developers, we recommend choosing a temporary directory API provided by Android, such as context.getCacheDir(). For other Java developers, we recommend migrating to the Java 7 API java.nio.file.Files.createTempDirectory() which explicitly configures permissions of 700, or configuring the Java runtime&apos;s java.io.tmpdir system property to point to a location whose permissions are appropriately configured.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/guava-27.0.1-android.jar</system-err></testcase><testcase classname="CVE-2020-8908" name="pkg:maven/com.google.guava/guava@27.0.1-android"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>A temp directory creation vulnerability exists in all versions of Guava, allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava API com.google.common.io.Files.createTempDir(). By default, on unix-like systems, the created directory is world-readable (readable by an attacker with access to the system). The method in question has been marked @Deprecated in versions 30.0 and later and should not be used. For Android developers, we recommend choosing a temporary directory API provided by Android, such as context.getCacheDir(). For other Java developers, we recommend migrating to the Java 7 API java.nio.file.Files.createTempDirectory() which explicitly configures permissions of 700, or configuring the Java runtime&apos;s java.io.tmpdir system property to point to a location whose permissions are appropriately configured.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/guava-27.0.1-android.jar</system-err></testcase></testsuite><testsuite failures="0" id="13" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/j2objc-annotations-1.1.jar" package="j2objc-annotations-1.1.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="j2objc-annotations-1.1.jar"/></testsuite><testsuite failures="0" id="14" name="/tmp/image-unpacked/usr/local/openjdk-8/lib/ext/jaccess.jar" package="jaccess.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="jaccess.jar"/></testsuite><testsuite failures="0" id="15" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-annotations-2.9.10.jar" package="jackson-annotations-2.9.10.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="jackson-annotations-2.9.10.jar"/></testsuite><testsuite failures="0" id="16" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-core-2.9.10.jar" package="jackson-core-2.9.10.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="jackson-core-2.9.10.jar"/></testsuite><testsuite failures="0" id="17" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-core-asl-1.9.2.jar" package="jackson-core-asl-1.9.2.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="jackson-core-asl-1.9.2.jar"/></testsuite><testsuite failures="39" id="18" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar" package="jackson-databind-2.9.10.jar" skipped="39" tests="78" timestamp="2021-09-27T06:07:56.437852"><testcase classname="CVE-2019-16942" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the commons-dbcp (1.4) jar in the classpath, and an attacker can find an RMI service endpoint to access, it is possible to make the service execute a malicious payload. This issue exists because of org.apache.commons.dbcp.datasources.SharedPoolDataSource and org.apache.commons.dbcp.datasources.PerUserPoolDataSource mishandling.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2019-16943" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the p6spy (3.8.6) jar in the classpath, and an attacker can find an RMI service endpoint to access, it is possible to make the service execute a malicious payload. This issue exists because of com.p6spy.engine.spy.P6DataSource mishandling.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2019-17531" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the apache-log4j-extra (version 1.2.x) jar in the classpath, and an attacker can provide a JNDI service to access, it is possible to make the service execute a malicious payload.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2019-20330" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.2 lacks certain net.sf.ehcache blocking.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-10672" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: HIGH, score: 8.8 (CVSS:/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.aries.transaction.jms.internal.XaPooledConnectionFactory (aka aries.transaction.jms).</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-10673" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: HIGH, score: 8.8 (CVSS:/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to com.caucho.config.types.ResourceRef (aka caucho-quercus).</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-10968" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: HIGH, score: 8.8 (CVSS:/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.aoju.bus.proxy.provider.remoting.RmiProvider (aka bus-proxy).</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-10969" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: HIGH, score: 8.8 (CVSS:/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to javax.swing.JEditorPane.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-11111" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: HIGH, score: 8.8 (CVSS:/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.activemq.* (aka activemq-jms, activemq-core, activemq-pool, and activemq-pool-jms).</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-11112" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: HIGH, score: 8.8 (CVSS:/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.proxy.provider.remoting.RmiProvider (aka apache/commons-proxy).</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-11113" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: HIGH, score: 8.8 (CVSS:/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.openjpa.ee.WASRegistryManagedRuntime (aka openjpa).</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-11619" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.springframework.aop.config.MethodLocatingFactoryBean (aka spring-aop).</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-11620" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.jelly.impl.Embedded (aka commons-jelly).</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-14060" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.5 mishandles the interaction between serialization gadgets and typing, related to oadd.org.apache.xalan.lib.sql.JNDIConnectionPool (aka apache/drill).</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-14061" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.5 mishandles the interaction between serialization gadgets and typing, related to oracle.jms.AQjmsQueueConnectionFactory, oracle.jms.AQjmsXATopicConnectionFactory, oracle.jms.AQjmsTopicConnectionFactory, oracle.jms.AQjmsXAQueueConnectionFactory, and oracle.jms.AQjmsXAConnectionFactory (aka weblogic/oracle-aqjms).</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-14062" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.5 mishandles the interaction between serialization gadgets and typing, related to com.sun.org.apache.xalan.internal.lib.sql.JNDIConnectionPool (aka xalan2).</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-14195" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.5 mishandles the interaction between serialization gadgets and typing, related to org.jsecurity.realm.jndi.JndiRealmFactory (aka org.jsecurity).</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-24616" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.6 mishandles the interaction between serialization gadgets and typing, related to br.com.anteros.dbcp.AnterosDBCPDataSource (aka Anteros-DBCP).</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-24750" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.6 mishandles the interaction between serialization gadgets and typing, related to com.pastdev.httpcomponents.configuration.JndiConfiguration.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-25649" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N)"/><system-out>A flaw was found in FasterXML Jackson Databind, where it did not have entity expansion secured properly. This flaw allows vulnerability to XML external entity (XXE) attacks. The highest threat from this vulnerability is data integrity.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-35490" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.datasources.PerUserPoolDataSource.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-35491" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.datasources.SharedPoolDataSource.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-35728" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to com.oracle.wls.shaded.org.apache.xalan.lib.sql.JNDIConnectionPool (aka embedded Xalan in org.glassfish.web/javax.servlet.jsp.jstl).</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-36179" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to oadd.org.apache.commons.dbcp.cpdsadapter.DriverAdapterCPDS.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-36180" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.cpdsadapter.DriverAdapterCPDS.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-36181" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp.cpdsadapter.DriverAdapterCPDS.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-36182" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp2.cpdsadapter.DriverAdapterCPDS.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-36183" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.docx4j.org.apache.xalan.lib.sql.JNDIConnectionPool.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-36184" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp2.datasources.PerUserPoolDataSource.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-36185" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp2.datasources.SharedPoolDataSource.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-36186" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp.datasources.PerUserPoolDataSource.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-36187" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp.datasources.SharedPoolDataSource.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-36188" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to com.newrelic.agent.deps.ch.qos.logback.core.db.JNDIConnectionSource.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-36189" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to com.newrelic.agent.deps.ch.qos.logback.core.db.DriverManagerConnectionSource.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-8840" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind 2.0.0 through 2.9.10.2 lacks certain xbean-reflect/JNDI blocking, as demonstrated by org.apache.xbean.propertyeditor.JndiConverter.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-9546" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.hadoop.shaded.com.zaxxer.hikari.HikariConfig (aka shaded hikari-config).</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-9547" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to com.ibatis.sqlmap.engine.transaction.jta.JtaTransactionConfig (aka ibatis-sqlmap).</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-9548" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to br.com.anteros.dbcp.AnterosDBCPConfig (aka anteros-core).</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2021-20190" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>A flaw was found in jackson-databind before 2.9.10.7. FasterXML mishandles the interaction between serialization gadgets and typing. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-9547" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to com.ibatis.sqlmap.engine.transaction.jta.JtaTransactionConfig (aka ibatis-sqlmap).</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-9548" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to br.com.anteros.dbcp.AnterosDBCPConfig (aka anteros-core).</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-36180" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.cpdsadapter.DriverAdapterCPDS.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-14195" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind 2.x before 2.9.10.5 mishandles the interaction between serialization gadgets and typing, related to org.jsecurity.realm.jndi.JndiRealmFactory (aka org.jsecurity).</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-24616" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind 2.x before 2.9.10.6 mishandles the interaction between serialization gadgets and typing, related to br.com.anteros.dbcp.AnterosDBCPDataSource (aka Anteros-DBCP).</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-36182" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp2.cpdsadapter.DriverAdapterCPDS.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-36181" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp.cpdsadapter.DriverAdapterCPDS.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-25649" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>A flaw was found in FasterXML Jackson Databind, where it did not have entity expansion secured properly. This flaw allows vulnerability to XML external entity (XXE) attacks. The highest threat from this vulnerability is data integrity.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-35491" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.datasources.SharedPoolDataSource.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-36184" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp2.datasources.PerUserPoolDataSource.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-35490" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.datasources.PerUserPoolDataSource.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-36183" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.docx4j.org.apache.xalan.lib.sql.JNDIConnectionPool.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-10969" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to javax.swing.JEditorPane.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-11619" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.springframework.aop.config.MethodLocatingFactoryBean (aka spring-aop).</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-35728" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to com.oracle.wls.shaded.org.apache.xalan.lib.sql.JNDIConnectionPool (aka embedded Xalan in org.glassfish.web/javax.servlet.jsp.jstl).</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-10968" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.aoju.bus.proxy.provider.remoting.RmiProvider (aka bus-proxy).</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2019-20330" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind 2.x before 2.9.10.2 lacks certain net.sf.ehcache blocking.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-24750" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind 2.x before 2.9.10.6 mishandles the interaction between serialization gadgets and typing, related to com.pastdev.httpcomponents.configuration.JndiConfiguration.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-10673" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to com.caucho.config.types.ResourceRef (aka caucho-quercus).</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-11620" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.jelly.impl.Embedded (aka commons-jelly).</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-36186" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp.datasources.PerUserPoolDataSource.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2019-17531" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the apache-log4j-extra (version 1.2.x) jar in the classpath, and an attacker can provide a JNDI service to access, it is possible to make the service execute a malicious payload.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-36185" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp2.datasources.SharedPoolDataSource.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-36188" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to com.newrelic.agent.deps.ch.qos.logback.core.db.JNDIConnectionSource.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-36187" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.tomcat.dbcp.dbcp.datasources.SharedPoolDataSource.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-10672" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.aries.transaction.jms.internal.XaPooledConnectionFactory (aka aries.transaction.jms).</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-36189" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to com.newrelic.agent.deps.ch.qos.logback.core.db.DriverManagerConnectionSource.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-9546" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.hadoop.shaded.com.zaxxer.hikari.HikariConfig (aka shaded hikari-config).</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-14060" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind 2.x before 2.9.10.5 mishandles the interaction between serialization gadgets and typing, related to oadd.org.apache.xalan.lib.sql.JNDIConnectionPool (aka apache/drill).</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-14061" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind 2.x before 2.9.10.5 mishandles the interaction between serialization gadgets and typing, related to oracle.jms.AQjmsQueueConnectionFactory, oracle.jms.AQjmsXATopicConnectionFactory, oracle.jms.AQjmsTopicConnectionFactory, oracle.jms.AQjmsXAQueueConnectionFactory, and oracle.jms.AQjmsXAConnectionFactory (aka weblogic/oracle-aqjms).</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-14062" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind 2.x before 2.9.10.5 mishandles the interaction between serialization gadgets and typing, related to com.sun.org.apache.xalan.internal.lib.sql.JNDIConnectionPool (aka xalan2).</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2019-16942" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the commons-dbcp (1.4) jar in the classpath, and an attacker can find an RMI service endpoint to access, it is possible to make the service execute a malicious payload. This issue exists because of org.apache.commons.dbcp.datasources.SharedPoolDataSource and org.apache.commons.dbcp.datasources.PerUserPoolDataSource mishandling.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2019-16943" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the p6spy (3.8.6) jar in the classpath, and an attacker can find an RMI service endpoint to access, it is possible to make the service execute a malicious payload. This issue exists because of com.p6spy.engine.spy.P6DataSource mishandling.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2021-20190" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>A flaw was found in jackson-databind before 2.9.10.7. FasterXML mishandles the interaction between serialization gadgets and typing. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-11113" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.openjpa.ee.WASRegistryManagedRuntime (aka openjpa).</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-11112" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.proxy.provider.remoting.RmiProvider (aka apache/commons-proxy).</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-36179" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to oadd.org.apache.commons.dbcp.cpdsadapter.DriverAdapterCPDS.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-11111" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.activemq.* (aka activemq-jms, activemq-core, activemq-pool, and activemq-pool-jms).</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase><testcase classname="CVE-2020-8840" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.9.10"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind 2.0.0 through 2.9.10.2 lacks certain xbean-reflect/JNDI blocking, as demonstrated by org.apache.xbean.propertyeditor.JndiConverter.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-databind-2.9.10.jar</system-err></testcase></testsuite><testsuite failures="0" id="19" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-dataformat-yaml-2.9.10.jar" package="jackson-dataformat-yaml-2.9.10.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="jackson-dataformat-yaml-2.9.10.jar"/></testsuite><testsuite failures="0" id="20" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-jaxrs-1.9.2.jar" package="jackson-jaxrs-1.9.2.jar" skipped="1" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="CVE-2018-7489" name="pkg:maven/org.codehaus.jackson/jackson-jaxrs@1.9.2"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind before 2.7.9.3, 2.8.x before 2.8.11.1 and 2.9.x before 2.9.5 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 deserialization flaw. This is exploitable by sending maliciously crafted JSON input to the readValue method of the ObjectMapper, bypassing a blacklist that is ineffective if the c3p0 libraries are available in the classpath.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-jaxrs-1.9.2.jar</system-err></testcase></testsuite><testsuite failures="0" id="21" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-jaxrs-base-2.9.10.jar" package="jackson-jaxrs-base-2.9.10.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="jackson-jaxrs-base-2.9.10.jar"/></testsuite><testsuite failures="0" id="22" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-jaxrs-json-provider-2.9.10.jar" package="jackson-jaxrs-json-provider-2.9.10.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="jackson-jaxrs-json-provider-2.9.10.jar"/></testsuite><testsuite failures="11" id="23" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-mapper-asl-1.9.2.jar" package="jackson-mapper-asl-1.9.2.jar" skipped="1" tests="12" timestamp="2021-09-27T06:07:56.437852"><testcase classname="CVE-2017-15095" name="pkg:maven/org.codehaus.jackson/jackson-mapper-asl@1.9.2"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>A deserialization flaw was discovered in the jackson-databind in versions before 2.8.10 and 2.9.1, which could allow an unauthenticated user to perform code execution by sending the maliciously crafted input to the readValue method of the ObjectMapper. This issue extends the previous flaw CVE-2017-7525 by blacklisting more classes that could be used maliciously.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-mapper-asl-1.9.2.jar</system-err></testcase><testcase classname="CVE-2017-17485" name="pkg:maven/org.codehaus.jackson/jackson-mapper-asl@1.9.2"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind through 2.8.10 and 2.9.x through 2.9.3 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 deserialization flaw. This is exploitable by sending maliciously crafted JSON input to the readValue method of the ObjectMapper, bypassing a blacklist that is ineffective if the Spring libraries are available in the classpath.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-mapper-asl-1.9.2.jar</system-err></testcase><testcase classname="CVE-2017-7525" name="pkg:maven/org.codehaus.jackson/jackson-mapper-asl@1.9.2"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>A deserialization flaw was discovered in the jackson-databind, versions before 2.6.7.1, 2.7.9.1 and 2.8.9, which could allow an unauthenticated user to perform code execution by sending the maliciously crafted input to the readValue method of the ObjectMapper.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-mapper-asl-1.9.2.jar</system-err></testcase><testcase classname="CVE-2018-1000873" name="pkg:maven/org.codehaus.jackson/jackson-mapper-asl@1.9.2"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H)"/><system-out>Fasterxml Jackson version Before 2.9.8 contains a CWE-20: Improper Input Validation vulnerability in Jackson-Modules-Java8 that can result in Causes a denial-of-service (DoS). This attack appear to be exploitable via The victim deserializes malicious input, specifically very large values in the nanoseconds field of a time value. This vulnerability appears to have been fixed in 2.9.8.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-mapper-asl-1.9.2.jar</system-err></testcase><testcase classname="CVE-2018-14718" name="pkg:maven/org.codehaus.jackson/jackson-mapper-asl@1.9.2"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to execute arbitrary code by leveraging failure to block the slf4j-ext class from polymorphic deserialization.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-mapper-asl-1.9.2.jar</system-err></testcase><testcase classname="CVE-2018-5968" name="pkg:maven/org.codehaus.jackson/jackson-mapper-asl@1.9.2"><failure message="cvssV3: HIGH, score: 8.1 (CVSS:/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind through 2.8.11 and 2.9.x through 2.9.3 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 and CVE-2017-17485 deserialization flaws. This is exploitable via two different gadgets that bypass a blacklist.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-mapper-asl-1.9.2.jar</system-err></testcase><testcase classname="CVE-2018-7489" name="pkg:maven/org.codehaus.jackson/jackson-mapper-asl@1.9.2"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>FasterXML jackson-databind before 2.7.9.3, 2.8.x before 2.8.11.1 and 2.9.x before 2.9.5 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 deserialization flaw. This is exploitable by sending maliciously crafted JSON input to the readValue method of the ObjectMapper, bypassing a blacklist that is ineffective if the c3p0 libraries are available in the classpath.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-mapper-asl-1.9.2.jar</system-err></testcase><testcase classname="CVE-2019-14540" name="pkg:maven/org.codehaus.jackson/jackson-mapper-asl@1.9.2"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to com.zaxxer.hikari.HikariConfig.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-mapper-asl-1.9.2.jar</system-err></testcase><testcase classname="CVE-2019-14893" name="pkg:maven/org.codehaus.jackson/jackson-mapper-asl@1.9.2"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>A flaw was discovered in FasterXML jackson-databind in all versions before 2.9.10 and 2.10.0, where it would permit polymorphic deserialization of malicious objects using the xalan JNDI gadget when used in conjunction with polymorphic type handling methods such as `enableDefaultTyping()` or when @JsonTypeInfo is using `Id.CLASS` or `Id.MINIMAL_CLASS` or in any other way which ObjectMapper.readValue might instantiate objects from unsafe sources. An attacker could use this flaw to execute arbitrary code.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-mapper-asl-1.9.2.jar</system-err></testcase><testcase classname="CVE-2019-16335" name="pkg:maven/org.codehaus.jackson/jackson-mapper-asl@1.9.2"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to com.zaxxer.hikari.HikariDataSource. This is a different vulnerability than CVE-2019-14540.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-mapper-asl-1.9.2.jar</system-err></testcase><testcase classname="CVE-2019-17267" name="pkg:maven/org.codehaus.jackson/jackson-mapper-asl@1.9.2"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to net.sf.ehcache.hibernate.EhcacheJtaTransactionManagerLookup.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-mapper-asl-1.9.2.jar</system-err></testcase><testcase classname="CVE-2019-10172" name="pkg:maven/org.codehaus.jackson/jackson-mapper-asl@1.9.2"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>A flaw was found in org.codehaus.jackson:jackson-mapper-asl:1.9.x libraries. XML external entity vulnerabilities similar CVE-2016-3720 also affects codehaus jackson-mapper-asl libraries but in different classes.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-mapper-asl-1.9.2.jar</system-err></testcase></testsuite><testsuite failures="0" id="24" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-module-jaxb-annotations-2.9.10.jar" package="jackson-module-jaxb-annotations-2.9.10.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="jackson-module-jaxb-annotations-2.9.10.jar"/></testsuite><testsuite failures="0" id="25" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-xc-1.9.2.jar" package="jackson-xc-1.9.2.jar" skipped="1" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="CVE-2018-7489" name="pkg:maven/org.codehaus.jackson/jackson-xc@1.9.2"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>FasterXML jackson-databind before 2.7.9.3, 2.8.x before 2.8.11.1 and 2.9.x before 2.9.5 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 deserialization flaw. This is exploitable by sending maliciously crafted JSON input to the readValue method of the ObjectMapper, bypassing a blacklist that is ineffective if the c3p0 libraries are available in the classpath.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jackson-xc-1.9.2.jar</system-err></testcase></testsuite><testsuite failures="0" id="26" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/javassist-3.21.0-GA.jar" package="javassist-3.21.0-GA.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="javassist-3.21.0-GA.jar"/></testsuite><testsuite failures="0" id="27" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jaxb-api-2.2.2.jar" package="jaxb-api-2.2.2.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="jaxb-api-2.2.2.jar"/></testsuite><testsuite failures="0" id="28" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jaxb-impl-2.2.3-1.jar" package="jaxb-impl-2.2.3-1.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="jaxb-impl-2.2.3-1.jar"/></testsuite><testsuite failures="0" id="29" name="/tmp/image-unpacked/usr/local/openjdk-8/lib/jce.jar" package="jce.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="jce.jar"/></testsuite><testsuite failures="0" id="30" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jersey-core-1.13.jar" package="jersey-core-1.13.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="jersey-core-1.13.jar"/></testsuite><testsuite failures="0" id="31" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jersey-json-1.13.jar" package="jersey-json-1.13.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="jersey-json-1.13.jar"/></testsuite><testsuite failures="0" id="32" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jersey-multipart-1.13.jar" package="jersey-multipart-1.13.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="jersey-multipart-1.13.jar"/></testsuite><testsuite failures="0" id="33" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jersey-server-1.13.jar" package="jersey-server-1.13.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="jersey-server-1.13.jar"/></testsuite><testsuite failures="0" id="34" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jersey-servlet-1.13.jar" package="jersey-servlet-1.13.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="jersey-servlet-1.13.jar"/></testsuite><testsuite failures="0" id="35" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jettison-1.1.jar" package="jettison-1.1.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="jettison-1.1.jar"/></testsuite><testsuite failures="0" id="36" name="/tmp/image-unpacked/petstore/jetty-runner.jar" package="jetty-runner.jar" skipped="10" tests="10" timestamp="2021-09-27T06:07:56.437852"><testcase classname="CVE-2017-7658" name="pkg:maven/org.eclipse.jetty/jetty-runner@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar</system-err></testcase><testcase classname="CVE-2021-34428" name="pkg:maven/org.eclipse.jetty/jetty-runner@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, if an exception is thrown from the SessionListener#sessionDestroyed() method, then the session ID is not invalidated in the session ID manager. On deployments with clustered sessions and multiple contexts this can result in a session not being invalidated. This can result in an application used on a shared computer being left logged in.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar</system-err></testcase><testcase classname="CVE-2017-7657" name="pkg:maven/org.eclipse.jetty/jetty-runner@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar</system-err></testcase><testcase classname="CVE-2017-7656" name="pkg:maven/org.eclipse.jetty/jetty-runner@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), HTTP/0.9 is handled poorly. An HTTP/1 style request line (i.e. method space URI space version) that declares a version of HTTP/0.9 was accepted and treated as a 0.9 request. If deployed behind an intermediary that also accepted and passed through the 0.9 version (but did not act on it), then the response sent could be interpreted by the intermediary as HTTP/1 headers. This could be used to poison the cache if the server allowed the origin client to generate arbitrary content in the response.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar</system-err></testcase><testcase classname="CVE-2021-28165" name="pkg:maven/org.eclipse.jetty/jetty-runner@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar</system-err></testcase><testcase classname="CVE-2019-10247" name="pkg:maven/org.eclipse.jetty/jetty-runner@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty version 7.x, 8.x, 9.2.27 and older, 9.3.26 and older, and 9.4.16 and older, the server running on any OS and Jetty version combination will reveal the configured fully qualified directory base resource location on the output of the 404 error for not finding a Context that matches the requested path. The default server behavior on jetty-distribution and jetty-home will include at the end of the Handler tree a DefaultHandler, which is responsible for reporting this 404 error, it presents the various configured contexts as HTML for users to click through to. This produced HTML includes output that contains the configured fully qualified directory base resource location for each context.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar</system-err></testcase><testcase classname="CVE-2021-28169" name="pkg:maven/org.eclipse.jetty/jetty-runner@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, it is possible for requests to the ConcatServlet with a doubly encoded path to access protected resources within the WEB-INF directory. For example a request to `/concat?/%2557EB-INF/web.xml` can retrieve the web.xml file. This can reveal sensitive information regarding the implementation of a web application.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar</system-err></testcase><testcase classname="CVE-2018-12536" name="pkg:maven/org.eclipse.jetty/jetty-runner@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn&apos;t match a dynamic url-pattern, and is eventually handled by the DefaultServlet&apos;s static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar</system-err></testcase><testcase classname="CVE-2020-27216" name="pkg:maven/org.eclipse.jetty/jetty-runner@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty versions 1.0 thru 9.4.32.v20200930, 10.0.0.alpha1 thru 10.0.0.beta2, and 11.0.0.alpha1 thru 11.0.0.beta2O, on Unix like systems, the system&apos;s temporary directory is shared between all users on that system. A collocated user can observe the process of creating a temporary sub directory in the shared temporary directory and race to complete the creation of the temporary subdirectory. If the attacker wins the race then they will have read and write permission to the subdirectory used to unpack web applications, including their WEB-INF/lib jar files and JSP files. If any code is ever executed out of this temporary directory, this can lead to a local privilege escalation vulnerability.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar</system-err></testcase><testcase classname="CVE-2019-10241" name="pkg:maven/org.eclipse.jetty/jetty-runner@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar</system-err></testcase></testsuite><testsuite failures="0" id="37" name="/tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/javax.annotation/javax.annotation-api/pom.xml" package="jetty-runner.jar (shaded: javax.annotation:javax.annotation-api:1.2)" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="jetty-runner.jar (shaded: javax.annotation:javax.annotation-api:1.2)"/></testsuite><testsuite failures="0" id="38" name="/tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/javax.servlet.jsp/javax.servlet.jsp-api/pom.xml" package="jetty-runner.jar (shaded: javax.servlet.jsp:javax.servlet.jsp-api:2.3.1)" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="jetty-runner.jar (shaded: javax.servlet.jsp:javax.servlet.jsp-api:2.3.1)"/></testsuite><testsuite failures="0" id="39" name="/tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/javax.servlet/javax.servlet-api/pom.xml" package="jetty-runner.jar (shaded: javax.servlet:javax.servlet-api:3.1.0)" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="jetty-runner.jar (shaded: javax.servlet:javax.servlet-api:3.1.0)"/></testsuite><testsuite failures="0" id="40" name="/tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.toolchain/jetty-schemas/pom.xml" package="jetty-runner.jar (shaded: org.eclipse.jetty.toolchain:jetty-schemas:3.1.M0)" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="jetty-runner.jar (shaded: org.eclipse.jetty.toolchain:jetty-schemas:3.1.M0)"/></testsuite><testsuite failures="0" id="41" name="/tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-api/pom.xml" package="jetty-runner.jar (shaded: org.eclipse.jetty.websocket:websocket-api:9.2.9.v20150224)" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="jetty-runner.jar (shaded: org.eclipse.jetty.websocket:websocket-api:9.2.9.v20150224)"/></testsuite><testsuite failures="0" id="42" name="/tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-client/pom.xml" package="jetty-runner.jar (shaded: org.eclipse.jetty.websocket:websocket-client:9.2.9.v20150224)" skipped="10" tests="10" timestamp="2021-09-27T06:07:56.437852"><testcase classname="CVE-2017-7658" name="pkg:maven/org.eclipse.jetty.websocket/websocket-client@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-client/pom.xml</system-err></testcase><testcase classname="CVE-2021-34428" name="pkg:maven/org.eclipse.jetty.websocket/websocket-client@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, if an exception is thrown from the SessionListener#sessionDestroyed() method, then the session ID is not invalidated in the session ID manager. On deployments with clustered sessions and multiple contexts this can result in a session not being invalidated. This can result in an application used on a shared computer being left logged in.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-client/pom.xml</system-err></testcase><testcase classname="CVE-2017-7657" name="pkg:maven/org.eclipse.jetty.websocket/websocket-client@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-client/pom.xml</system-err></testcase><testcase classname="CVE-2017-7656" name="pkg:maven/org.eclipse.jetty.websocket/websocket-client@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), HTTP/0.9 is handled poorly. An HTTP/1 style request line (i.e. method space URI space version) that declares a version of HTTP/0.9 was accepted and treated as a 0.9 request. If deployed behind an intermediary that also accepted and passed through the 0.9 version (but did not act on it), then the response sent could be interpreted by the intermediary as HTTP/1 headers. This could be used to poison the cache if the server allowed the origin client to generate arbitrary content in the response.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-client/pom.xml</system-err></testcase><testcase classname="CVE-2021-28165" name="pkg:maven/org.eclipse.jetty.websocket/websocket-client@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-client/pom.xml</system-err></testcase><testcase classname="CVE-2019-10247" name="pkg:maven/org.eclipse.jetty.websocket/websocket-client@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty version 7.x, 8.x, 9.2.27 and older, 9.3.26 and older, and 9.4.16 and older, the server running on any OS and Jetty version combination will reveal the configured fully qualified directory base resource location on the output of the 404 error for not finding a Context that matches the requested path. The default server behavior on jetty-distribution and jetty-home will include at the end of the Handler tree a DefaultHandler, which is responsible for reporting this 404 error, it presents the various configured contexts as HTML for users to click through to. This produced HTML includes output that contains the configured fully qualified directory base resource location for each context.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-client/pom.xml</system-err></testcase><testcase classname="CVE-2021-28169" name="pkg:maven/org.eclipse.jetty.websocket/websocket-client@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, it is possible for requests to the ConcatServlet with a doubly encoded path to access protected resources within the WEB-INF directory. For example a request to `/concat?/%2557EB-INF/web.xml` can retrieve the web.xml file. This can reveal sensitive information regarding the implementation of a web application.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-client/pom.xml</system-err></testcase><testcase classname="CVE-2018-12536" name="pkg:maven/org.eclipse.jetty.websocket/websocket-client@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn&apos;t match a dynamic url-pattern, and is eventually handled by the DefaultServlet&apos;s static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-client/pom.xml</system-err></testcase><testcase classname="CVE-2020-27216" name="pkg:maven/org.eclipse.jetty.websocket/websocket-client@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty versions 1.0 thru 9.4.32.v20200930, 10.0.0.alpha1 thru 10.0.0.beta2, and 11.0.0.alpha1 thru 11.0.0.beta2O, on Unix like systems, the system&apos;s temporary directory is shared between all users on that system. A collocated user can observe the process of creating a temporary sub directory in the shared temporary directory and race to complete the creation of the temporary subdirectory. If the attacker wins the race then they will have read and write permission to the subdirectory used to unpack web applications, including their WEB-INF/lib jar files and JSP files. If any code is ever executed out of this temporary directory, this can lead to a local privilege escalation vulnerability.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-client/pom.xml</system-err></testcase><testcase classname="CVE-2019-10241" name="pkg:maven/org.eclipse.jetty.websocket/websocket-client@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-client/pom.xml</system-err></testcase></testsuite><testsuite failures="0" id="43" name="/tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-common/pom.xml" package="jetty-runner.jar (shaded: org.eclipse.jetty.websocket:websocket-common:9.2.9.v20150224)" skipped="10" tests="10" timestamp="2021-09-27T06:07:56.437852"><testcase classname="CVE-2017-7658" name="pkg:maven/org.eclipse.jetty.websocket/websocket-common@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-common/pom.xml</system-err></testcase><testcase classname="CVE-2021-34428" name="pkg:maven/org.eclipse.jetty.websocket/websocket-common@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, if an exception is thrown from the SessionListener#sessionDestroyed() method, then the session ID is not invalidated in the session ID manager. On deployments with clustered sessions and multiple contexts this can result in a session not being invalidated. This can result in an application used on a shared computer being left logged in.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-common/pom.xml</system-err></testcase><testcase classname="CVE-2017-7657" name="pkg:maven/org.eclipse.jetty.websocket/websocket-common@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-common/pom.xml</system-err></testcase><testcase classname="CVE-2017-7656" name="pkg:maven/org.eclipse.jetty.websocket/websocket-common@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), HTTP/0.9 is handled poorly. An HTTP/1 style request line (i.e. method space URI space version) that declares a version of HTTP/0.9 was accepted and treated as a 0.9 request. If deployed behind an intermediary that also accepted and passed through the 0.9 version (but did not act on it), then the response sent could be interpreted by the intermediary as HTTP/1 headers. This could be used to poison the cache if the server allowed the origin client to generate arbitrary content in the response.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-common/pom.xml</system-err></testcase><testcase classname="CVE-2021-28165" name="pkg:maven/org.eclipse.jetty.websocket/websocket-common@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-common/pom.xml</system-err></testcase><testcase classname="CVE-2019-10247" name="pkg:maven/org.eclipse.jetty.websocket/websocket-common@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty version 7.x, 8.x, 9.2.27 and older, 9.3.26 and older, and 9.4.16 and older, the server running on any OS and Jetty version combination will reveal the configured fully qualified directory base resource location on the output of the 404 error for not finding a Context that matches the requested path. The default server behavior on jetty-distribution and jetty-home will include at the end of the Handler tree a DefaultHandler, which is responsible for reporting this 404 error, it presents the various configured contexts as HTML for users to click through to. This produced HTML includes output that contains the configured fully qualified directory base resource location for each context.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-common/pom.xml</system-err></testcase><testcase classname="CVE-2021-28169" name="pkg:maven/org.eclipse.jetty.websocket/websocket-common@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, it is possible for requests to the ConcatServlet with a doubly encoded path to access protected resources within the WEB-INF directory. For example a request to `/concat?/%2557EB-INF/web.xml` can retrieve the web.xml file. This can reveal sensitive information regarding the implementation of a web application.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-common/pom.xml</system-err></testcase><testcase classname="CVE-2018-12536" name="pkg:maven/org.eclipse.jetty.websocket/websocket-common@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn&apos;t match a dynamic url-pattern, and is eventually handled by the DefaultServlet&apos;s static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-common/pom.xml</system-err></testcase><testcase classname="CVE-2020-27216" name="pkg:maven/org.eclipse.jetty.websocket/websocket-common@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty versions 1.0 thru 9.4.32.v20200930, 10.0.0.alpha1 thru 10.0.0.beta2, and 11.0.0.alpha1 thru 11.0.0.beta2O, on Unix like systems, the system&apos;s temporary directory is shared between all users on that system. A collocated user can observe the process of creating a temporary sub directory in the shared temporary directory and race to complete the creation of the temporary subdirectory. If the attacker wins the race then they will have read and write permission to the subdirectory used to unpack web applications, including their WEB-INF/lib jar files and JSP files. If any code is ever executed out of this temporary directory, this can lead to a local privilege escalation vulnerability.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-common/pom.xml</system-err></testcase><testcase classname="CVE-2019-10241" name="pkg:maven/org.eclipse.jetty.websocket/websocket-common@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-common/pom.xml</system-err></testcase></testsuite><testsuite failures="10" id="44" name="/tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-server/pom.xml" package="jetty-runner.jar (shaded: org.eclipse.jetty.websocket:websocket-server:9.2.9.v20150224)" skipped="10" tests="20" timestamp="2021-09-27T06:07:56.437852"><testcase classname="CVE-2017-7656" name="pkg:maven/org.eclipse.jetty.websocket/websocket-server@9.2.9.v20150224"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N)"/><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), HTTP/0.9 is handled poorly. An HTTP/1 style request line (i.e. method space URI space version) that declares a version of HTTP/0.9 was accepted and treated as a 0.9 request. If deployed behind an intermediary that also accepted and passed through the 0.9 version (but did not act on it), then the response sent could be interpreted by the intermediary as HTTP/1 headers. This could be used to poison the cache if the server allowed the origin client to generate arbitrary content in the response.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-server/pom.xml</system-err></testcase><testcase classname="CVE-2017-7657" name="pkg:maven/org.eclipse.jetty.websocket/websocket-server@9.2.9.v20150224"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-server/pom.xml</system-err></testcase><testcase classname="CVE-2017-7658" name="pkg:maven/org.eclipse.jetty.websocket/websocket-server@9.2.9.v20150224"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-server/pom.xml</system-err></testcase><testcase classname="CVE-2017-9735" name="pkg:maven/org.eclipse.jetty.websocket/websocket-server@9.2.9.v20150224"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N)"/><system-out>Jetty through 9.4.x is prone to a timing channel in util/security/Password.java, which makes it easier for remote attackers to obtain access by observing elapsed times before rejection of incorrect passwords.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-server/pom.xml</system-err></testcase><testcase classname="CVE-2018-12536" name="pkg:maven/org.eclipse.jetty.websocket/websocket-server@9.2.9.v20150224"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N)"/><system-out>In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn&apos;t match a dynamic url-pattern, and is eventually handled by the DefaultServlet&apos;s static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-server/pom.xml</system-err></testcase><testcase classname="CVE-2019-10241" name="pkg:maven/org.eclipse.jetty.websocket/websocket-server@9.2.9.v20150224"><failure message="cvssV3: MEDIUM, score: 6.1 (CVSS:/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N)"/><system-out>In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-server/pom.xml</system-err></testcase><testcase classname="CVE-2019-10247" name="pkg:maven/org.eclipse.jetty.websocket/websocket-server@9.2.9.v20150224"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N)"/><system-out>In Eclipse Jetty version 7.x, 8.x, 9.2.27 and older, 9.3.26 and older, and 9.4.16 and older, the server running on any OS and Jetty version combination will reveal the configured fully qualified directory base resource location on the output of the 404 error for not finding a Context that matches the requested path. The default server behavior on jetty-distribution and jetty-home will include at the end of the Handler tree a DefaultHandler, which is responsible for reporting this 404 error, it presents the various configured contexts as HTML for users to click through to. This produced HTML includes output that contains the configured fully qualified directory base resource location for each context.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-server/pom.xml</system-err></testcase><testcase classname="CVE-2021-28165" name="pkg:maven/org.eclipse.jetty.websocket/websocket-server@9.2.9.v20150224"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-server/pom.xml</system-err></testcase><testcase classname="CVE-2021-28169" name="pkg:maven/org.eclipse.jetty.websocket/websocket-server@9.2.9.v20150224"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N)"/><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, it is possible for requests to the ConcatServlet with a doubly encoded path to access protected resources within the WEB-INF directory. For example a request to `/concat?/%2557EB-INF/web.xml` can retrieve the web.xml file. This can reveal sensitive information regarding the implementation of a web application.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-server/pom.xml</system-err></testcase><testcase classname="CVE-2021-34428" name="pkg:maven/org.eclipse.jetty.websocket/websocket-server@9.2.9.v20150224"><failure message="cvssV3: LOW, score: 3.5 (CVSS:/AV:P/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N)"/><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, if an exception is thrown from the SessionListener#sessionDestroyed() method, then the session ID is not invalidated in the session ID manager. On deployments with clustered sessions and multiple contexts this can result in a session not being invalidated. This can result in an application used on a shared computer being left logged in.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-server/pom.xml</system-err></testcase><testcase classname="CVE-2017-7658" name="pkg:maven/org.eclipse.jetty.websocket/websocket-server@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-server/pom.xml</system-err></testcase><testcase classname="CVE-2021-34428" name="pkg:maven/org.eclipse.jetty.websocket/websocket-server@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, if an exception is thrown from the SessionListener#sessionDestroyed() method, then the session ID is not invalidated in the session ID manager. On deployments with clustered sessions and multiple contexts this can result in a session not being invalidated. This can result in an application used on a shared computer being left logged in.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-server/pom.xml</system-err></testcase><testcase classname="CVE-2017-7657" name="pkg:maven/org.eclipse.jetty.websocket/websocket-server@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-server/pom.xml</system-err></testcase><testcase classname="CVE-2017-7656" name="pkg:maven/org.eclipse.jetty.websocket/websocket-server@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), HTTP/0.9 is handled poorly. An HTTP/1 style request line (i.e. method space URI space version) that declares a version of HTTP/0.9 was accepted and treated as a 0.9 request. If deployed behind an intermediary that also accepted and passed through the 0.9 version (but did not act on it), then the response sent could be interpreted by the intermediary as HTTP/1 headers. This could be used to poison the cache if the server allowed the origin client to generate arbitrary content in the response.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-server/pom.xml</system-err></testcase><testcase classname="CVE-2021-28165" name="pkg:maven/org.eclipse.jetty.websocket/websocket-server@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-server/pom.xml</system-err></testcase><testcase classname="CVE-2019-10247" name="pkg:maven/org.eclipse.jetty.websocket/websocket-server@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty version 7.x, 8.x, 9.2.27 and older, 9.3.26 and older, and 9.4.16 and older, the server running on any OS and Jetty version combination will reveal the configured fully qualified directory base resource location on the output of the 404 error for not finding a Context that matches the requested path. The default server behavior on jetty-distribution and jetty-home will include at the end of the Handler tree a DefaultHandler, which is responsible for reporting this 404 error, it presents the various configured contexts as HTML for users to click through to. This produced HTML includes output that contains the configured fully qualified directory base resource location for each context.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-server/pom.xml</system-err></testcase><testcase classname="CVE-2021-28169" name="pkg:maven/org.eclipse.jetty.websocket/websocket-server@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, it is possible for requests to the ConcatServlet with a doubly encoded path to access protected resources within the WEB-INF directory. For example a request to `/concat?/%2557EB-INF/web.xml` can retrieve the web.xml file. This can reveal sensitive information regarding the implementation of a web application.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-server/pom.xml</system-err></testcase><testcase classname="CVE-2018-12536" name="pkg:maven/org.eclipse.jetty.websocket/websocket-server@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn&apos;t match a dynamic url-pattern, and is eventually handled by the DefaultServlet&apos;s static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-server/pom.xml</system-err></testcase><testcase classname="CVE-2020-27216" name="pkg:maven/org.eclipse.jetty.websocket/websocket-server@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty versions 1.0 thru 9.4.32.v20200930, 10.0.0.alpha1 thru 10.0.0.beta2, and 11.0.0.alpha1 thru 11.0.0.beta2O, on Unix like systems, the system&apos;s temporary directory is shared between all users on that system. A collocated user can observe the process of creating a temporary sub directory in the shared temporary directory and race to complete the creation of the temporary subdirectory. If the attacker wins the race then they will have read and write permission to the subdirectory used to unpack web applications, including their WEB-INF/lib jar files and JSP files. If any code is ever executed out of this temporary directory, this can lead to a local privilege escalation vulnerability.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-server/pom.xml</system-err></testcase><testcase classname="CVE-2019-10241" name="pkg:maven/org.eclipse.jetty.websocket/websocket-server@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-server/pom.xml</system-err></testcase></testsuite><testsuite failures="0" id="45" name="/tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-servlet/pom.xml" package="jetty-runner.jar (shaded: org.eclipse.jetty.websocket:websocket-servlet:9.2.9.v20150224)" skipped="10" tests="10" timestamp="2021-09-27T06:07:56.437852"><testcase classname="CVE-2017-7658" name="pkg:maven/org.eclipse.jetty.websocket/websocket-servlet@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-servlet/pom.xml</system-err></testcase><testcase classname="CVE-2021-34428" name="pkg:maven/org.eclipse.jetty.websocket/websocket-servlet@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, if an exception is thrown from the SessionListener#sessionDestroyed() method, then the session ID is not invalidated in the session ID manager. On deployments with clustered sessions and multiple contexts this can result in a session not being invalidated. This can result in an application used on a shared computer being left logged in.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-servlet/pom.xml</system-err></testcase><testcase classname="CVE-2017-7657" name="pkg:maven/org.eclipse.jetty.websocket/websocket-servlet@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-servlet/pom.xml</system-err></testcase><testcase classname="CVE-2017-7656" name="pkg:maven/org.eclipse.jetty.websocket/websocket-servlet@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), HTTP/0.9 is handled poorly. An HTTP/1 style request line (i.e. method space URI space version) that declares a version of HTTP/0.9 was accepted and treated as a 0.9 request. If deployed behind an intermediary that also accepted and passed through the 0.9 version (but did not act on it), then the response sent could be interpreted by the intermediary as HTTP/1 headers. This could be used to poison the cache if the server allowed the origin client to generate arbitrary content in the response.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-servlet/pom.xml</system-err></testcase><testcase classname="CVE-2021-28165" name="pkg:maven/org.eclipse.jetty.websocket/websocket-servlet@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-servlet/pom.xml</system-err></testcase><testcase classname="CVE-2019-10247" name="pkg:maven/org.eclipse.jetty.websocket/websocket-servlet@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty version 7.x, 8.x, 9.2.27 and older, 9.3.26 and older, and 9.4.16 and older, the server running on any OS and Jetty version combination will reveal the configured fully qualified directory base resource location on the output of the 404 error for not finding a Context that matches the requested path. The default server behavior on jetty-distribution and jetty-home will include at the end of the Handler tree a DefaultHandler, which is responsible for reporting this 404 error, it presents the various configured contexts as HTML for users to click through to. This produced HTML includes output that contains the configured fully qualified directory base resource location for each context.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-servlet/pom.xml</system-err></testcase><testcase classname="CVE-2021-28169" name="pkg:maven/org.eclipse.jetty.websocket/websocket-servlet@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, it is possible for requests to the ConcatServlet with a doubly encoded path to access protected resources within the WEB-INF directory. For example a request to `/concat?/%2557EB-INF/web.xml` can retrieve the web.xml file. This can reveal sensitive information regarding the implementation of a web application.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-servlet/pom.xml</system-err></testcase><testcase classname="CVE-2018-12536" name="pkg:maven/org.eclipse.jetty.websocket/websocket-servlet@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn&apos;t match a dynamic url-pattern, and is eventually handled by the DefaultServlet&apos;s static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-servlet/pom.xml</system-err></testcase><testcase classname="CVE-2020-27216" name="pkg:maven/org.eclipse.jetty.websocket/websocket-servlet@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty versions 1.0 thru 9.4.32.v20200930, 10.0.0.alpha1 thru 10.0.0.beta2, and 11.0.0.alpha1 thru 11.0.0.beta2O, on Unix like systems, the system&apos;s temporary directory is shared between all users on that system. A collocated user can observe the process of creating a temporary sub directory in the shared temporary directory and race to complete the creation of the temporary subdirectory. If the attacker wins the race then they will have read and write permission to the subdirectory used to unpack web applications, including their WEB-INF/lib jar files and JSP files. If any code is ever executed out of this temporary directory, this can lead to a local privilege escalation vulnerability.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-servlet/pom.xml</system-err></testcase><testcase classname="CVE-2019-10241" name="pkg:maven/org.eclipse.jetty.websocket/websocket-servlet@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty.websocket/websocket-servlet/pom.xml</system-err></testcase></testsuite><testsuite failures="0" id="46" name="/tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-annotations/pom.xml" package="jetty-runner.jar (shaded: org.eclipse.jetty:jetty-annotations:9.2.9.v20150224)" skipped="10" tests="10" timestamp="2021-09-27T06:07:56.437852"><testcase classname="CVE-2017-7658" name="pkg:maven/org.eclipse.jetty/jetty-annotations@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-annotations/pom.xml</system-err></testcase><testcase classname="CVE-2021-34428" name="pkg:maven/org.eclipse.jetty/jetty-annotations@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, if an exception is thrown from the SessionListener#sessionDestroyed() method, then the session ID is not invalidated in the session ID manager. On deployments with clustered sessions and multiple contexts this can result in a session not being invalidated. This can result in an application used on a shared computer being left logged in.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-annotations/pom.xml</system-err></testcase><testcase classname="CVE-2017-7657" name="pkg:maven/org.eclipse.jetty/jetty-annotations@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-annotations/pom.xml</system-err></testcase><testcase classname="CVE-2017-7656" name="pkg:maven/org.eclipse.jetty/jetty-annotations@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), HTTP/0.9 is handled poorly. An HTTP/1 style request line (i.e. method space URI space version) that declares a version of HTTP/0.9 was accepted and treated as a 0.9 request. If deployed behind an intermediary that also accepted and passed through the 0.9 version (but did not act on it), then the response sent could be interpreted by the intermediary as HTTP/1 headers. This could be used to poison the cache if the server allowed the origin client to generate arbitrary content in the response.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-annotations/pom.xml</system-err></testcase><testcase classname="CVE-2021-28165" name="pkg:maven/org.eclipse.jetty/jetty-annotations@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-annotations/pom.xml</system-err></testcase><testcase classname="CVE-2019-10247" name="pkg:maven/org.eclipse.jetty/jetty-annotations@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty version 7.x, 8.x, 9.2.27 and older, 9.3.26 and older, and 9.4.16 and older, the server running on any OS and Jetty version combination will reveal the configured fully qualified directory base resource location on the output of the 404 error for not finding a Context that matches the requested path. The default server behavior on jetty-distribution and jetty-home will include at the end of the Handler tree a DefaultHandler, which is responsible for reporting this 404 error, it presents the various configured contexts as HTML for users to click through to. This produced HTML includes output that contains the configured fully qualified directory base resource location for each context.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-annotations/pom.xml</system-err></testcase><testcase classname="CVE-2021-28169" name="pkg:maven/org.eclipse.jetty/jetty-annotations@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, it is possible for requests to the ConcatServlet with a doubly encoded path to access protected resources within the WEB-INF directory. For example a request to `/concat?/%2557EB-INF/web.xml` can retrieve the web.xml file. This can reveal sensitive information regarding the implementation of a web application.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-annotations/pom.xml</system-err></testcase><testcase classname="CVE-2018-12536" name="pkg:maven/org.eclipse.jetty/jetty-annotations@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn&apos;t match a dynamic url-pattern, and is eventually handled by the DefaultServlet&apos;s static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-annotations/pom.xml</system-err></testcase><testcase classname="CVE-2020-27216" name="pkg:maven/org.eclipse.jetty/jetty-annotations@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty versions 1.0 thru 9.4.32.v20200930, 10.0.0.alpha1 thru 10.0.0.beta2, and 11.0.0.alpha1 thru 11.0.0.beta2O, on Unix like systems, the system&apos;s temporary directory is shared between all users on that system. A collocated user can observe the process of creating a temporary sub directory in the shared temporary directory and race to complete the creation of the temporary subdirectory. If the attacker wins the race then they will have read and write permission to the subdirectory used to unpack web applications, including their WEB-INF/lib jar files and JSP files. If any code is ever executed out of this temporary directory, this can lead to a local privilege escalation vulnerability.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-annotations/pom.xml</system-err></testcase><testcase classname="CVE-2019-10241" name="pkg:maven/org.eclipse.jetty/jetty-annotations@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-annotations/pom.xml</system-err></testcase></testsuite><testsuite failures="9" id="47" name="/tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-http/pom.xml" package="jetty-runner.jar (shaded: org.eclipse.jetty:jetty-http:9.2.9.v20150224)" skipped="10" tests="19" timestamp="2021-09-27T06:07:56.437852"><testcase classname="CVE-2017-7656" name="pkg:maven/org.eclipse.jetty/jetty-http@9.2.9.v20150224"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N)"/><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), HTTP/0.9 is handled poorly. An HTTP/1 style request line (i.e. method space URI space version) that declares a version of HTTP/0.9 was accepted and treated as a 0.9 request. If deployed behind an intermediary that also accepted and passed through the 0.9 version (but did not act on it), then the response sent could be interpreted by the intermediary as HTTP/1 headers. This could be used to poison the cache if the server allowed the origin client to generate arbitrary content in the response.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-http/pom.xml</system-err></testcase><testcase classname="CVE-2017-7657" name="pkg:maven/org.eclipse.jetty/jetty-http@9.2.9.v20150224"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-http/pom.xml</system-err></testcase><testcase classname="CVE-2017-7658" name="pkg:maven/org.eclipse.jetty/jetty-http@9.2.9.v20150224"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-http/pom.xml</system-err></testcase><testcase classname="CVE-2017-9735" name="pkg:maven/org.eclipse.jetty/jetty-http@9.2.9.v20150224"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N)"/><system-out>Jetty through 9.4.x is prone to a timing channel in util/security/Password.java, which makes it easier for remote attackers to obtain access by observing elapsed times before rejection of incorrect passwords.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-http/pom.xml</system-err></testcase><testcase classname="CVE-2018-12536" name="pkg:maven/org.eclipse.jetty/jetty-http@9.2.9.v20150224"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N)"/><system-out>In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn&apos;t match a dynamic url-pattern, and is eventually handled by the DefaultServlet&apos;s static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-http/pom.xml</system-err></testcase><testcase classname="CVE-2019-10241" name="pkg:maven/org.eclipse.jetty/jetty-http@9.2.9.v20150224"><failure message="cvssV3: MEDIUM, score: 6.1 (CVSS:/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N)"/><system-out>In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-http/pom.xml</system-err></testcase><testcase classname="CVE-2019-10247" name="pkg:maven/org.eclipse.jetty/jetty-http@9.2.9.v20150224"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N)"/><system-out>In Eclipse Jetty version 7.x, 8.x, 9.2.27 and older, 9.3.26 and older, and 9.4.16 and older, the server running on any OS and Jetty version combination will reveal the configured fully qualified directory base resource location on the output of the 404 error for not finding a Context that matches the requested path. The default server behavior on jetty-distribution and jetty-home will include at the end of the Handler tree a DefaultHandler, which is responsible for reporting this 404 error, it presents the various configured contexts as HTML for users to click through to. This produced HTML includes output that contains the configured fully qualified directory base resource location for each context.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-http/pom.xml</system-err></testcase><testcase classname="CVE-2021-28169" name="pkg:maven/org.eclipse.jetty/jetty-http@9.2.9.v20150224"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N)"/><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, it is possible for requests to the ConcatServlet with a doubly encoded path to access protected resources within the WEB-INF directory. For example a request to `/concat?/%2557EB-INF/web.xml` can retrieve the web.xml file. This can reveal sensitive information regarding the implementation of a web application.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-http/pom.xml</system-err></testcase><testcase classname="CVE-2021-34428" name="pkg:maven/org.eclipse.jetty/jetty-http@9.2.9.v20150224"><failure message="cvssV3: LOW, score: 3.5 (CVSS:/AV:P/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N)"/><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, if an exception is thrown from the SessionListener#sessionDestroyed() method, then the session ID is not invalidated in the session ID manager. On deployments with clustered sessions and multiple contexts this can result in a session not being invalidated. This can result in an application used on a shared computer being left logged in.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-http/pom.xml</system-err></testcase><testcase classname="CVE-2017-7658" name="pkg:maven/org.eclipse.jetty/jetty-http@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-http/pom.xml</system-err></testcase><testcase classname="CVE-2021-34428" name="pkg:maven/org.eclipse.jetty/jetty-http@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, if an exception is thrown from the SessionListener#sessionDestroyed() method, then the session ID is not invalidated in the session ID manager. On deployments with clustered sessions and multiple contexts this can result in a session not being invalidated. This can result in an application used on a shared computer being left logged in.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-http/pom.xml</system-err></testcase><testcase classname="CVE-2017-7657" name="pkg:maven/org.eclipse.jetty/jetty-http@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-http/pom.xml</system-err></testcase><testcase classname="CVE-2017-7656" name="pkg:maven/org.eclipse.jetty/jetty-http@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), HTTP/0.9 is handled poorly. An HTTP/1 style request line (i.e. method space URI space version) that declares a version of HTTP/0.9 was accepted and treated as a 0.9 request. If deployed behind an intermediary that also accepted and passed through the 0.9 version (but did not act on it), then the response sent could be interpreted by the intermediary as HTTP/1 headers. This could be used to poison the cache if the server allowed the origin client to generate arbitrary content in the response.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-http/pom.xml</system-err></testcase><testcase classname="CVE-2021-28165" name="pkg:maven/org.eclipse.jetty/jetty-http@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-http/pom.xml</system-err></testcase><testcase classname="CVE-2019-10247" name="pkg:maven/org.eclipse.jetty/jetty-http@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty version 7.x, 8.x, 9.2.27 and older, 9.3.26 and older, and 9.4.16 and older, the server running on any OS and Jetty version combination will reveal the configured fully qualified directory base resource location on the output of the 404 error for not finding a Context that matches the requested path. The default server behavior on jetty-distribution and jetty-home will include at the end of the Handler tree a DefaultHandler, which is responsible for reporting this 404 error, it presents the various configured contexts as HTML for users to click through to. This produced HTML includes output that contains the configured fully qualified directory base resource location for each context.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-http/pom.xml</system-err></testcase><testcase classname="CVE-2021-28169" name="pkg:maven/org.eclipse.jetty/jetty-http@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, it is possible for requests to the ConcatServlet with a doubly encoded path to access protected resources within the WEB-INF directory. For example a request to `/concat?/%2557EB-INF/web.xml` can retrieve the web.xml file. This can reveal sensitive information regarding the implementation of a web application.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-http/pom.xml</system-err></testcase><testcase classname="CVE-2018-12536" name="pkg:maven/org.eclipse.jetty/jetty-http@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn&apos;t match a dynamic url-pattern, and is eventually handled by the DefaultServlet&apos;s static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-http/pom.xml</system-err></testcase><testcase classname="CVE-2020-27216" name="pkg:maven/org.eclipse.jetty/jetty-http@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty versions 1.0 thru 9.4.32.v20200930, 10.0.0.alpha1 thru 10.0.0.beta2, and 11.0.0.alpha1 thru 11.0.0.beta2O, on Unix like systems, the system&apos;s temporary directory is shared between all users on that system. A collocated user can observe the process of creating a temporary sub directory in the shared temporary directory and race to complete the creation of the temporary subdirectory. If the attacker wins the race then they will have read and write permission to the subdirectory used to unpack web applications, including their WEB-INF/lib jar files and JSP files. If any code is ever executed out of this temporary directory, this can lead to a local privilege escalation vulnerability.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-http/pom.xml</system-err></testcase><testcase classname="CVE-2019-10241" name="pkg:maven/org.eclipse.jetty/jetty-http@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-http/pom.xml</system-err></testcase></testsuite><testsuite failures="0" id="48" name="/tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-io/pom.xml" package="jetty-runner.jar (shaded: org.eclipse.jetty:jetty-io:9.2.9.v20150224)" skipped="1" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="CVE-2021-28165" name="pkg:maven/org.eclipse.jetty/jetty-io@9.2.9.v20150224"><skipped message="file names: jetty-http-9.4.37.v20210219.jar + jetty-server-9.4.37.v20210219.jar

   CVE description: In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.

   Our services are not affected because they only use HTTP within the cluster for communication." /><system-out>In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-io/pom.xml</system-err></testcase></testsuite><testsuite failures="0" id="49" name="/tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-jaas/pom.xml" package="jetty-runner.jar (shaded: org.eclipse.jetty:jetty-jaas:9.2.9.v20150224)" skipped="10" tests="10" timestamp="2021-09-27T06:07:56.437852"><testcase classname="CVE-2017-7658" name="pkg:maven/org.eclipse.jetty/jetty-jaas@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-jaas/pom.xml</system-err></testcase><testcase classname="CVE-2021-34428" name="pkg:maven/org.eclipse.jetty/jetty-jaas@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, if an exception is thrown from the SessionListener#sessionDestroyed() method, then the session ID is not invalidated in the session ID manager. On deployments with clustered sessions and multiple contexts this can result in a session not being invalidated. This can result in an application used on a shared computer being left logged in.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-jaas/pom.xml</system-err></testcase><testcase classname="CVE-2017-7657" name="pkg:maven/org.eclipse.jetty/jetty-jaas@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-jaas/pom.xml</system-err></testcase><testcase classname="CVE-2017-7656" name="pkg:maven/org.eclipse.jetty/jetty-jaas@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), HTTP/0.9 is handled poorly. An HTTP/1 style request line (i.e. method space URI space version) that declares a version of HTTP/0.9 was accepted and treated as a 0.9 request. If deployed behind an intermediary that also accepted and passed through the 0.9 version (but did not act on it), then the response sent could be interpreted by the intermediary as HTTP/1 headers. This could be used to poison the cache if the server allowed the origin client to generate arbitrary content in the response.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-jaas/pom.xml</system-err></testcase><testcase classname="CVE-2021-28165" name="pkg:maven/org.eclipse.jetty/jetty-jaas@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-jaas/pom.xml</system-err></testcase><testcase classname="CVE-2019-10247" name="pkg:maven/org.eclipse.jetty/jetty-jaas@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty version 7.x, 8.x, 9.2.27 and older, 9.3.26 and older, and 9.4.16 and older, the server running on any OS and Jetty version combination will reveal the configured fully qualified directory base resource location on the output of the 404 error for not finding a Context that matches the requested path. The default server behavior on jetty-distribution and jetty-home will include at the end of the Handler tree a DefaultHandler, which is responsible for reporting this 404 error, it presents the various configured contexts as HTML for users to click through to. This produced HTML includes output that contains the configured fully qualified directory base resource location for each context.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-jaas/pom.xml</system-err></testcase><testcase classname="CVE-2021-28169" name="pkg:maven/org.eclipse.jetty/jetty-jaas@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, it is possible for requests to the ConcatServlet with a doubly encoded path to access protected resources within the WEB-INF directory. For example a request to `/concat?/%2557EB-INF/web.xml` can retrieve the web.xml file. This can reveal sensitive information regarding the implementation of a web application.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-jaas/pom.xml</system-err></testcase><testcase classname="CVE-2018-12536" name="pkg:maven/org.eclipse.jetty/jetty-jaas@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn&apos;t match a dynamic url-pattern, and is eventually handled by the DefaultServlet&apos;s static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-jaas/pom.xml</system-err></testcase><testcase classname="CVE-2020-27216" name="pkg:maven/org.eclipse.jetty/jetty-jaas@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty versions 1.0 thru 9.4.32.v20200930, 10.0.0.alpha1 thru 10.0.0.beta2, and 11.0.0.alpha1 thru 11.0.0.beta2O, on Unix like systems, the system&apos;s temporary directory is shared between all users on that system. A collocated user can observe the process of creating a temporary sub directory in the shared temporary directory and race to complete the creation of the temporary subdirectory. If the attacker wins the race then they will have read and write permission to the subdirectory used to unpack web applications, including their WEB-INF/lib jar files and JSP files. If any code is ever executed out of this temporary directory, this can lead to a local privilege escalation vulnerability.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-jaas/pom.xml</system-err></testcase><testcase classname="CVE-2019-10241" name="pkg:maven/org.eclipse.jetty/jetty-jaas@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-jaas/pom.xml</system-err></testcase></testsuite><testsuite failures="0" id="50" name="/tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-jndi/pom.xml" package="jetty-runner.jar (shaded: org.eclipse.jetty:jetty-jndi:9.2.9.v20150224)" skipped="10" tests="10" timestamp="2021-09-27T06:07:56.437852"><testcase classname="CVE-2017-7658" name="pkg:maven/org.eclipse.jetty/jetty-jndi@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-jndi/pom.xml</system-err></testcase><testcase classname="CVE-2021-34428" name="pkg:maven/org.eclipse.jetty/jetty-jndi@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, if an exception is thrown from the SessionListener#sessionDestroyed() method, then the session ID is not invalidated in the session ID manager. On deployments with clustered sessions and multiple contexts this can result in a session not being invalidated. This can result in an application used on a shared computer being left logged in.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-jndi/pom.xml</system-err></testcase><testcase classname="CVE-2017-7657" name="pkg:maven/org.eclipse.jetty/jetty-jndi@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-jndi/pom.xml</system-err></testcase><testcase classname="CVE-2017-7656" name="pkg:maven/org.eclipse.jetty/jetty-jndi@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), HTTP/0.9 is handled poorly. An HTTP/1 style request line (i.e. method space URI space version) that declares a version of HTTP/0.9 was accepted and treated as a 0.9 request. If deployed behind an intermediary that also accepted and passed through the 0.9 version (but did not act on it), then the response sent could be interpreted by the intermediary as HTTP/1 headers. This could be used to poison the cache if the server allowed the origin client to generate arbitrary content in the response.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-jndi/pom.xml</system-err></testcase><testcase classname="CVE-2021-28165" name="pkg:maven/org.eclipse.jetty/jetty-jndi@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-jndi/pom.xml</system-err></testcase><testcase classname="CVE-2019-10247" name="pkg:maven/org.eclipse.jetty/jetty-jndi@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty version 7.x, 8.x, 9.2.27 and older, 9.3.26 and older, and 9.4.16 and older, the server running on any OS and Jetty version combination will reveal the configured fully qualified directory base resource location on the output of the 404 error for not finding a Context that matches the requested path. The default server behavior on jetty-distribution and jetty-home will include at the end of the Handler tree a DefaultHandler, which is responsible for reporting this 404 error, it presents the various configured contexts as HTML for users to click through to. This produced HTML includes output that contains the configured fully qualified directory base resource location for each context.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-jndi/pom.xml</system-err></testcase><testcase classname="CVE-2021-28169" name="pkg:maven/org.eclipse.jetty/jetty-jndi@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, it is possible for requests to the ConcatServlet with a doubly encoded path to access protected resources within the WEB-INF directory. For example a request to `/concat?/%2557EB-INF/web.xml` can retrieve the web.xml file. This can reveal sensitive information regarding the implementation of a web application.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-jndi/pom.xml</system-err></testcase><testcase classname="CVE-2018-12536" name="pkg:maven/org.eclipse.jetty/jetty-jndi@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn&apos;t match a dynamic url-pattern, and is eventually handled by the DefaultServlet&apos;s static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-jndi/pom.xml</system-err></testcase><testcase classname="CVE-2020-27216" name="pkg:maven/org.eclipse.jetty/jetty-jndi@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty versions 1.0 thru 9.4.32.v20200930, 10.0.0.alpha1 thru 10.0.0.beta2, and 11.0.0.alpha1 thru 11.0.0.beta2O, on Unix like systems, the system&apos;s temporary directory is shared between all users on that system. A collocated user can observe the process of creating a temporary sub directory in the shared temporary directory and race to complete the creation of the temporary subdirectory. If the attacker wins the race then they will have read and write permission to the subdirectory used to unpack web applications, including their WEB-INF/lib jar files and JSP files. If any code is ever executed out of this temporary directory, this can lead to a local privilege escalation vulnerability.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-jndi/pom.xml</system-err></testcase><testcase classname="CVE-2019-10241" name="pkg:maven/org.eclipse.jetty/jetty-jndi@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-jndi/pom.xml</system-err></testcase></testsuite><testsuite failures="0" id="51" name="/tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-jsp/pom.xml" package="jetty-runner.jar (shaded: org.eclipse.jetty:jetty-jsp:9.2.9.v20150224)" skipped="10" tests="10" timestamp="2021-09-27T06:07:56.437852"><testcase classname="CVE-2017-7658" name="pkg:maven/org.eclipse.jetty/jetty-jsp@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-jsp/pom.xml</system-err></testcase><testcase classname="CVE-2021-34428" name="pkg:maven/org.eclipse.jetty/jetty-jsp@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, if an exception is thrown from the SessionListener#sessionDestroyed() method, then the session ID is not invalidated in the session ID manager. On deployments with clustered sessions and multiple contexts this can result in a session not being invalidated. This can result in an application used on a shared computer being left logged in.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-jsp/pom.xml</system-err></testcase><testcase classname="CVE-2017-7657" name="pkg:maven/org.eclipse.jetty/jetty-jsp@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-jsp/pom.xml</system-err></testcase><testcase classname="CVE-2017-7656" name="pkg:maven/org.eclipse.jetty/jetty-jsp@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), HTTP/0.9 is handled poorly. An HTTP/1 style request line (i.e. method space URI space version) that declares a version of HTTP/0.9 was accepted and treated as a 0.9 request. If deployed behind an intermediary that also accepted and passed through the 0.9 version (but did not act on it), then the response sent could be interpreted by the intermediary as HTTP/1 headers. This could be used to poison the cache if the server allowed the origin client to generate arbitrary content in the response.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-jsp/pom.xml</system-err></testcase><testcase classname="CVE-2021-28165" name="pkg:maven/org.eclipse.jetty/jetty-jsp@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-jsp/pom.xml</system-err></testcase><testcase classname="CVE-2019-10247" name="pkg:maven/org.eclipse.jetty/jetty-jsp@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty version 7.x, 8.x, 9.2.27 and older, 9.3.26 and older, and 9.4.16 and older, the server running on any OS and Jetty version combination will reveal the configured fully qualified directory base resource location on the output of the 404 error for not finding a Context that matches the requested path. The default server behavior on jetty-distribution and jetty-home will include at the end of the Handler tree a DefaultHandler, which is responsible for reporting this 404 error, it presents the various configured contexts as HTML for users to click through to. This produced HTML includes output that contains the configured fully qualified directory base resource location for each context.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-jsp/pom.xml</system-err></testcase><testcase classname="CVE-2021-28169" name="pkg:maven/org.eclipse.jetty/jetty-jsp@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, it is possible for requests to the ConcatServlet with a doubly encoded path to access protected resources within the WEB-INF directory. For example a request to `/concat?/%2557EB-INF/web.xml` can retrieve the web.xml file. This can reveal sensitive information regarding the implementation of a web application.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-jsp/pom.xml</system-err></testcase><testcase classname="CVE-2018-12536" name="pkg:maven/org.eclipse.jetty/jetty-jsp@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn&apos;t match a dynamic url-pattern, and is eventually handled by the DefaultServlet&apos;s static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-jsp/pom.xml</system-err></testcase><testcase classname="CVE-2020-27216" name="pkg:maven/org.eclipse.jetty/jetty-jsp@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty versions 1.0 thru 9.4.32.v20200930, 10.0.0.alpha1 thru 10.0.0.beta2, and 11.0.0.alpha1 thru 11.0.0.beta2O, on Unix like systems, the system&apos;s temporary directory is shared between all users on that system. A collocated user can observe the process of creating a temporary sub directory in the shared temporary directory and race to complete the creation of the temporary subdirectory. If the attacker wins the race then they will have read and write permission to the subdirectory used to unpack web applications, including their WEB-INF/lib jar files and JSP files. If any code is ever executed out of this temporary directory, this can lead to a local privilege escalation vulnerability.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-jsp/pom.xml</system-err></testcase><testcase classname="CVE-2019-10241" name="pkg:maven/org.eclipse.jetty/jetty-jsp@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-jsp/pom.xml</system-err></testcase></testsuite><testsuite failures="9" id="52" name="/tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-plus/pom.xml" package="jetty-runner.jar (shaded: org.eclipse.jetty:jetty-plus:9.2.9.v20150224)" skipped="10" tests="19" timestamp="2021-09-27T06:07:56.437852"><testcase classname="CVE-2017-7656" name="pkg:maven/org.eclipse.jetty/jetty-plus@9.2.9.v20150224"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N)"/><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), HTTP/0.9 is handled poorly. An HTTP/1 style request line (i.e. method space URI space version) that declares a version of HTTP/0.9 was accepted and treated as a 0.9 request. If deployed behind an intermediary that also accepted and passed through the 0.9 version (but did not act on it), then the response sent could be interpreted by the intermediary as HTTP/1 headers. This could be used to poison the cache if the server allowed the origin client to generate arbitrary content in the response.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-plus/pom.xml</system-err></testcase><testcase classname="CVE-2017-7657" name="pkg:maven/org.eclipse.jetty/jetty-plus@9.2.9.v20150224"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-plus/pom.xml</system-err></testcase><testcase classname="CVE-2017-7658" name="pkg:maven/org.eclipse.jetty/jetty-plus@9.2.9.v20150224"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-plus/pom.xml</system-err></testcase><testcase classname="CVE-2017-9735" name="pkg:maven/org.eclipse.jetty/jetty-plus@9.2.9.v20150224"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N)"/><system-out>Jetty through 9.4.x is prone to a timing channel in util/security/Password.java, which makes it easier for remote attackers to obtain access by observing elapsed times before rejection of incorrect passwords.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-plus/pom.xml</system-err></testcase><testcase classname="CVE-2018-12536" name="pkg:maven/org.eclipse.jetty/jetty-plus@9.2.9.v20150224"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N)"/><system-out>In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn&apos;t match a dynamic url-pattern, and is eventually handled by the DefaultServlet&apos;s static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-plus/pom.xml</system-err></testcase><testcase classname="CVE-2019-10241" name="pkg:maven/org.eclipse.jetty/jetty-plus@9.2.9.v20150224"><failure message="cvssV3: MEDIUM, score: 6.1 (CVSS:/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N)"/><system-out>In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-plus/pom.xml</system-err></testcase><testcase classname="CVE-2019-10247" name="pkg:maven/org.eclipse.jetty/jetty-plus@9.2.9.v20150224"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N)"/><system-out>In Eclipse Jetty version 7.x, 8.x, 9.2.27 and older, 9.3.26 and older, and 9.4.16 and older, the server running on any OS and Jetty version combination will reveal the configured fully qualified directory base resource location on the output of the 404 error for not finding a Context that matches the requested path. The default server behavior on jetty-distribution and jetty-home will include at the end of the Handler tree a DefaultHandler, which is responsible for reporting this 404 error, it presents the various configured contexts as HTML for users to click through to. This produced HTML includes output that contains the configured fully qualified directory base resource location for each context.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-plus/pom.xml</system-err></testcase><testcase classname="CVE-2021-28169" name="pkg:maven/org.eclipse.jetty/jetty-plus@9.2.9.v20150224"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N)"/><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, it is possible for requests to the ConcatServlet with a doubly encoded path to access protected resources within the WEB-INF directory. For example a request to `/concat?/%2557EB-INF/web.xml` can retrieve the web.xml file. This can reveal sensitive information regarding the implementation of a web application.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-plus/pom.xml</system-err></testcase><testcase classname="CVE-2021-34428" name="pkg:maven/org.eclipse.jetty/jetty-plus@9.2.9.v20150224"><failure message="cvssV3: LOW, score: 3.5 (CVSS:/AV:P/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N)"/><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, if an exception is thrown from the SessionListener#sessionDestroyed() method, then the session ID is not invalidated in the session ID manager. On deployments with clustered sessions and multiple contexts this can result in a session not being invalidated. This can result in an application used on a shared computer being left logged in.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-plus/pom.xml</system-err></testcase><testcase classname="CVE-2017-7658" name="pkg:maven/org.eclipse.jetty/jetty-plus@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-plus/pom.xml</system-err></testcase><testcase classname="CVE-2021-34428" name="pkg:maven/org.eclipse.jetty/jetty-plus@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, if an exception is thrown from the SessionListener#sessionDestroyed() method, then the session ID is not invalidated in the session ID manager. On deployments with clustered sessions and multiple contexts this can result in a session not being invalidated. This can result in an application used on a shared computer being left logged in.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-plus/pom.xml</system-err></testcase><testcase classname="CVE-2017-7657" name="pkg:maven/org.eclipse.jetty/jetty-plus@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-plus/pom.xml</system-err></testcase><testcase classname="CVE-2017-7656" name="pkg:maven/org.eclipse.jetty/jetty-plus@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), HTTP/0.9 is handled poorly. An HTTP/1 style request line (i.e. method space URI space version) that declares a version of HTTP/0.9 was accepted and treated as a 0.9 request. If deployed behind an intermediary that also accepted and passed through the 0.9 version (but did not act on it), then the response sent could be interpreted by the intermediary as HTTP/1 headers. This could be used to poison the cache if the server allowed the origin client to generate arbitrary content in the response.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-plus/pom.xml</system-err></testcase><testcase classname="CVE-2021-28165" name="pkg:maven/org.eclipse.jetty/jetty-plus@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-plus/pom.xml</system-err></testcase><testcase classname="CVE-2019-10247" name="pkg:maven/org.eclipse.jetty/jetty-plus@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty version 7.x, 8.x, 9.2.27 and older, 9.3.26 and older, and 9.4.16 and older, the server running on any OS and Jetty version combination will reveal the configured fully qualified directory base resource location on the output of the 404 error for not finding a Context that matches the requested path. The default server behavior on jetty-distribution and jetty-home will include at the end of the Handler tree a DefaultHandler, which is responsible for reporting this 404 error, it presents the various configured contexts as HTML for users to click through to. This produced HTML includes output that contains the configured fully qualified directory base resource location for each context.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-plus/pom.xml</system-err></testcase><testcase classname="CVE-2021-28169" name="pkg:maven/org.eclipse.jetty/jetty-plus@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, it is possible for requests to the ConcatServlet with a doubly encoded path to access protected resources within the WEB-INF directory. For example a request to `/concat?/%2557EB-INF/web.xml` can retrieve the web.xml file. This can reveal sensitive information regarding the implementation of a web application.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-plus/pom.xml</system-err></testcase><testcase classname="CVE-2018-12536" name="pkg:maven/org.eclipse.jetty/jetty-plus@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn&apos;t match a dynamic url-pattern, and is eventually handled by the DefaultServlet&apos;s static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-plus/pom.xml</system-err></testcase><testcase classname="CVE-2020-27216" name="pkg:maven/org.eclipse.jetty/jetty-plus@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty versions 1.0 thru 9.4.32.v20200930, 10.0.0.alpha1 thru 10.0.0.beta2, and 11.0.0.alpha1 thru 11.0.0.beta2O, on Unix like systems, the system&apos;s temporary directory is shared between all users on that system. A collocated user can observe the process of creating a temporary sub directory in the shared temporary directory and race to complete the creation of the temporary subdirectory. If the attacker wins the race then they will have read and write permission to the subdirectory used to unpack web applications, including their WEB-INF/lib jar files and JSP files. If any code is ever executed out of this temporary directory, this can lead to a local privilege escalation vulnerability.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-plus/pom.xml</system-err></testcase><testcase classname="CVE-2019-10241" name="pkg:maven/org.eclipse.jetty/jetty-plus@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-plus/pom.xml</system-err></testcase></testsuite><testsuite failures="0" id="53" name="/tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-security/pom.xml" package="jetty-runner.jar (shaded: org.eclipse.jetty:jetty-security:9.2.9.v20150224)" skipped="10" tests="10" timestamp="2021-09-27T06:07:56.437852"><testcase classname="CVE-2017-7658" name="pkg:maven/org.eclipse.jetty/jetty-security@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-security/pom.xml</system-err></testcase><testcase classname="CVE-2021-34428" name="pkg:maven/org.eclipse.jetty/jetty-security@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, if an exception is thrown from the SessionListener#sessionDestroyed() method, then the session ID is not invalidated in the session ID manager. On deployments with clustered sessions and multiple contexts this can result in a session not being invalidated. This can result in an application used on a shared computer being left logged in.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-security/pom.xml</system-err></testcase><testcase classname="CVE-2017-7657" name="pkg:maven/org.eclipse.jetty/jetty-security@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-security/pom.xml</system-err></testcase><testcase classname="CVE-2017-7656" name="pkg:maven/org.eclipse.jetty/jetty-security@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), HTTP/0.9 is handled poorly. An HTTP/1 style request line (i.e. method space URI space version) that declares a version of HTTP/0.9 was accepted and treated as a 0.9 request. If deployed behind an intermediary that also accepted and passed through the 0.9 version (but did not act on it), then the response sent could be interpreted by the intermediary as HTTP/1 headers. This could be used to poison the cache if the server allowed the origin client to generate arbitrary content in the response.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-security/pom.xml</system-err></testcase><testcase classname="CVE-2021-28165" name="pkg:maven/org.eclipse.jetty/jetty-security@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-security/pom.xml</system-err></testcase><testcase classname="CVE-2019-10247" name="pkg:maven/org.eclipse.jetty/jetty-security@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty version 7.x, 8.x, 9.2.27 and older, 9.3.26 and older, and 9.4.16 and older, the server running on any OS and Jetty version combination will reveal the configured fully qualified directory base resource location on the output of the 404 error for not finding a Context that matches the requested path. The default server behavior on jetty-distribution and jetty-home will include at the end of the Handler tree a DefaultHandler, which is responsible for reporting this 404 error, it presents the various configured contexts as HTML for users to click through to. This produced HTML includes output that contains the configured fully qualified directory base resource location for each context.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-security/pom.xml</system-err></testcase><testcase classname="CVE-2021-28169" name="pkg:maven/org.eclipse.jetty/jetty-security@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, it is possible for requests to the ConcatServlet with a doubly encoded path to access protected resources within the WEB-INF directory. For example a request to `/concat?/%2557EB-INF/web.xml` can retrieve the web.xml file. This can reveal sensitive information regarding the implementation of a web application.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-security/pom.xml</system-err></testcase><testcase classname="CVE-2018-12536" name="pkg:maven/org.eclipse.jetty/jetty-security@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn&apos;t match a dynamic url-pattern, and is eventually handled by the DefaultServlet&apos;s static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-security/pom.xml</system-err></testcase><testcase classname="CVE-2020-27216" name="pkg:maven/org.eclipse.jetty/jetty-security@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty versions 1.0 thru 9.4.32.v20200930, 10.0.0.alpha1 thru 10.0.0.beta2, and 11.0.0.alpha1 thru 11.0.0.beta2O, on Unix like systems, the system&apos;s temporary directory is shared between all users on that system. A collocated user can observe the process of creating a temporary sub directory in the shared temporary directory and race to complete the creation of the temporary subdirectory. If the attacker wins the race then they will have read and write permission to the subdirectory used to unpack web applications, including their WEB-INF/lib jar files and JSP files. If any code is ever executed out of this temporary directory, this can lead to a local privilege escalation vulnerability.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-security/pom.xml</system-err></testcase><testcase classname="CVE-2019-10241" name="pkg:maven/org.eclipse.jetty/jetty-security@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-security/pom.xml</system-err></testcase></testsuite><testsuite failures="9" id="54" name="/tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-server/pom.xml" package="jetty-runner.jar (shaded: org.eclipse.jetty:jetty-server:9.2.9.v20150224)" skipped="10" tests="19" timestamp="2021-09-27T06:07:56.437852"><testcase classname="CVE-2017-7656" name="pkg:maven/org.eclipse.jetty/jetty-server@9.2.9.v20150224"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N)"/><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), HTTP/0.9 is handled poorly. An HTTP/1 style request line (i.e. method space URI space version) that declares a version of HTTP/0.9 was accepted and treated as a 0.9 request. If deployed behind an intermediary that also accepted and passed through the 0.9 version (but did not act on it), then the response sent could be interpreted by the intermediary as HTTP/1 headers. This could be used to poison the cache if the server allowed the origin client to generate arbitrary content in the response.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-server/pom.xml</system-err></testcase><testcase classname="CVE-2017-7657" name="pkg:maven/org.eclipse.jetty/jetty-server@9.2.9.v20150224"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-server/pom.xml</system-err></testcase><testcase classname="CVE-2017-7658" name="pkg:maven/org.eclipse.jetty/jetty-server@9.2.9.v20150224"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-server/pom.xml</system-err></testcase><testcase classname="CVE-2017-9735" name="pkg:maven/org.eclipse.jetty/jetty-server@9.2.9.v20150224"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N)"/><system-out>Jetty through 9.4.x is prone to a timing channel in util/security/Password.java, which makes it easier for remote attackers to obtain access by observing elapsed times before rejection of incorrect passwords.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-server/pom.xml</system-err></testcase><testcase classname="CVE-2018-12536" name="pkg:maven/org.eclipse.jetty/jetty-server@9.2.9.v20150224"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N)"/><system-out>In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn&apos;t match a dynamic url-pattern, and is eventually handled by the DefaultServlet&apos;s static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-server/pom.xml</system-err></testcase><testcase classname="CVE-2019-10241" name="pkg:maven/org.eclipse.jetty/jetty-server@9.2.9.v20150224"><failure message="cvssV3: MEDIUM, score: 6.1 (CVSS:/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N)"/><system-out>In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-server/pom.xml</system-err></testcase><testcase classname="CVE-2019-10247" name="pkg:maven/org.eclipse.jetty/jetty-server@9.2.9.v20150224"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N)"/><system-out>In Eclipse Jetty version 7.x, 8.x, 9.2.27 and older, 9.3.26 and older, and 9.4.16 and older, the server running on any OS and Jetty version combination will reveal the configured fully qualified directory base resource location on the output of the 404 error for not finding a Context that matches the requested path. The default server behavior on jetty-distribution and jetty-home will include at the end of the Handler tree a DefaultHandler, which is responsible for reporting this 404 error, it presents the various configured contexts as HTML for users to click through to. This produced HTML includes output that contains the configured fully qualified directory base resource location for each context.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-server/pom.xml</system-err></testcase><testcase classname="CVE-2021-28169" name="pkg:maven/org.eclipse.jetty/jetty-server@9.2.9.v20150224"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N)"/><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, it is possible for requests to the ConcatServlet with a doubly encoded path to access protected resources within the WEB-INF directory. For example a request to `/concat?/%2557EB-INF/web.xml` can retrieve the web.xml file. This can reveal sensitive information regarding the implementation of a web application.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-server/pom.xml</system-err></testcase><testcase classname="CVE-2021-34428" name="pkg:maven/org.eclipse.jetty/jetty-server@9.2.9.v20150224"><failure message="cvssV3: LOW, score: 3.5 (CVSS:/AV:P/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N)"/><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, if an exception is thrown from the SessionListener#sessionDestroyed() method, then the session ID is not invalidated in the session ID manager. On deployments with clustered sessions and multiple contexts this can result in a session not being invalidated. This can result in an application used on a shared computer being left logged in.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-server/pom.xml</system-err></testcase><testcase classname="CVE-2017-7658" name="pkg:maven/org.eclipse.jetty/jetty-server@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-server/pom.xml</system-err></testcase><testcase classname="CVE-2021-34428" name="pkg:maven/org.eclipse.jetty/jetty-server@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, if an exception is thrown from the SessionListener#sessionDestroyed() method, then the session ID is not invalidated in the session ID manager. On deployments with clustered sessions and multiple contexts this can result in a session not being invalidated. This can result in an application used on a shared computer being left logged in.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-server/pom.xml</system-err></testcase><testcase classname="CVE-2017-7657" name="pkg:maven/org.eclipse.jetty/jetty-server@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-server/pom.xml</system-err></testcase><testcase classname="CVE-2017-7656" name="pkg:maven/org.eclipse.jetty/jetty-server@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), HTTP/0.9 is handled poorly. An HTTP/1 style request line (i.e. method space URI space version) that declares a version of HTTP/0.9 was accepted and treated as a 0.9 request. If deployed behind an intermediary that also accepted and passed through the 0.9 version (but did not act on it), then the response sent could be interpreted by the intermediary as HTTP/1 headers. This could be used to poison the cache if the server allowed the origin client to generate arbitrary content in the response.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-server/pom.xml</system-err></testcase><testcase classname="CVE-2021-28165" name="pkg:maven/org.eclipse.jetty/jetty-server@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-server/pom.xml</system-err></testcase><testcase classname="CVE-2019-10247" name="pkg:maven/org.eclipse.jetty/jetty-server@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty version 7.x, 8.x, 9.2.27 and older, 9.3.26 and older, and 9.4.16 and older, the server running on any OS and Jetty version combination will reveal the configured fully qualified directory base resource location on the output of the 404 error for not finding a Context that matches the requested path. The default server behavior on jetty-distribution and jetty-home will include at the end of the Handler tree a DefaultHandler, which is responsible for reporting this 404 error, it presents the various configured contexts as HTML for users to click through to. This produced HTML includes output that contains the configured fully qualified directory base resource location for each context.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-server/pom.xml</system-err></testcase><testcase classname="CVE-2021-28169" name="pkg:maven/org.eclipse.jetty/jetty-server@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, it is possible for requests to the ConcatServlet with a doubly encoded path to access protected resources within the WEB-INF directory. For example a request to `/concat?/%2557EB-INF/web.xml` can retrieve the web.xml file. This can reveal sensitive information regarding the implementation of a web application.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-server/pom.xml</system-err></testcase><testcase classname="CVE-2018-12536" name="pkg:maven/org.eclipse.jetty/jetty-server@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn&apos;t match a dynamic url-pattern, and is eventually handled by the DefaultServlet&apos;s static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-server/pom.xml</system-err></testcase><testcase classname="CVE-2020-27216" name="pkg:maven/org.eclipse.jetty/jetty-server@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty versions 1.0 thru 9.4.32.v20200930, 10.0.0.alpha1 thru 10.0.0.beta2, and 11.0.0.alpha1 thru 11.0.0.beta2O, on Unix like systems, the system&apos;s temporary directory is shared between all users on that system. A collocated user can observe the process of creating a temporary sub directory in the shared temporary directory and race to complete the creation of the temporary subdirectory. If the attacker wins the race then they will have read and write permission to the subdirectory used to unpack web applications, including their WEB-INF/lib jar files and JSP files. If any code is ever executed out of this temporary directory, this can lead to a local privilege escalation vulnerability.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-server/pom.xml</system-err></testcase><testcase classname="CVE-2019-10241" name="pkg:maven/org.eclipse.jetty/jetty-server@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-server/pom.xml</system-err></testcase></testsuite><testsuite failures="0" id="55" name="/tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-servlet/pom.xml" package="jetty-runner.jar (shaded: org.eclipse.jetty:jetty-servlet:9.2.9.v20150224)" skipped="10" tests="10" timestamp="2021-09-27T06:07:56.437852"><testcase classname="CVE-2017-7658" name="pkg:maven/org.eclipse.jetty/jetty-servlet@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-servlet/pom.xml</system-err></testcase><testcase classname="CVE-2021-34428" name="pkg:maven/org.eclipse.jetty/jetty-servlet@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, if an exception is thrown from the SessionListener#sessionDestroyed() method, then the session ID is not invalidated in the session ID manager. On deployments with clustered sessions and multiple contexts this can result in a session not being invalidated. This can result in an application used on a shared computer being left logged in.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-servlet/pom.xml</system-err></testcase><testcase classname="CVE-2017-7657" name="pkg:maven/org.eclipse.jetty/jetty-servlet@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-servlet/pom.xml</system-err></testcase><testcase classname="CVE-2017-7656" name="pkg:maven/org.eclipse.jetty/jetty-servlet@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), HTTP/0.9 is handled poorly. An HTTP/1 style request line (i.e. method space URI space version) that declares a version of HTTP/0.9 was accepted and treated as a 0.9 request. If deployed behind an intermediary that also accepted and passed through the 0.9 version (but did not act on it), then the response sent could be interpreted by the intermediary as HTTP/1 headers. This could be used to poison the cache if the server allowed the origin client to generate arbitrary content in the response.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-servlet/pom.xml</system-err></testcase><testcase classname="CVE-2021-28165" name="pkg:maven/org.eclipse.jetty/jetty-servlet@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-servlet/pom.xml</system-err></testcase><testcase classname="CVE-2019-10247" name="pkg:maven/org.eclipse.jetty/jetty-servlet@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty version 7.x, 8.x, 9.2.27 and older, 9.3.26 and older, and 9.4.16 and older, the server running on any OS and Jetty version combination will reveal the configured fully qualified directory base resource location on the output of the 404 error for not finding a Context that matches the requested path. The default server behavior on jetty-distribution and jetty-home will include at the end of the Handler tree a DefaultHandler, which is responsible for reporting this 404 error, it presents the various configured contexts as HTML for users to click through to. This produced HTML includes output that contains the configured fully qualified directory base resource location for each context.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-servlet/pom.xml</system-err></testcase><testcase classname="CVE-2021-28169" name="pkg:maven/org.eclipse.jetty/jetty-servlet@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, it is possible for requests to the ConcatServlet with a doubly encoded path to access protected resources within the WEB-INF directory. For example a request to `/concat?/%2557EB-INF/web.xml` can retrieve the web.xml file. This can reveal sensitive information regarding the implementation of a web application.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-servlet/pom.xml</system-err></testcase><testcase classname="CVE-2018-12536" name="pkg:maven/org.eclipse.jetty/jetty-servlet@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn&apos;t match a dynamic url-pattern, and is eventually handled by the DefaultServlet&apos;s static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-servlet/pom.xml</system-err></testcase><testcase classname="CVE-2020-27216" name="pkg:maven/org.eclipse.jetty/jetty-servlet@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty versions 1.0 thru 9.4.32.v20200930, 10.0.0.alpha1 thru 10.0.0.beta2, and 11.0.0.alpha1 thru 11.0.0.beta2O, on Unix like systems, the system&apos;s temporary directory is shared between all users on that system. A collocated user can observe the process of creating a temporary sub directory in the shared temporary directory and race to complete the creation of the temporary subdirectory. If the attacker wins the race then they will have read and write permission to the subdirectory used to unpack web applications, including their WEB-INF/lib jar files and JSP files. If any code is ever executed out of this temporary directory, this can lead to a local privilege escalation vulnerability.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-servlet/pom.xml</system-err></testcase><testcase classname="CVE-2019-10241" name="pkg:maven/org.eclipse.jetty/jetty-servlet@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-servlet/pom.xml</system-err></testcase></testsuite><testsuite failures="0" id="56" name="/tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-util/pom.xml" package="jetty-runner.jar (shaded: org.eclipse.jetty:jetty-util:9.2.9.v20150224)" skipped="10" tests="10" timestamp="2021-09-27T06:07:56.437852"><testcase classname="CVE-2017-7658" name="pkg:maven/org.eclipse.jetty/jetty-util@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-util/pom.xml</system-err></testcase><testcase classname="CVE-2021-34428" name="pkg:maven/org.eclipse.jetty/jetty-util@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, if an exception is thrown from the SessionListener#sessionDestroyed() method, then the session ID is not invalidated in the session ID manager. On deployments with clustered sessions and multiple contexts this can result in a session not being invalidated. This can result in an application used on a shared computer being left logged in.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-util/pom.xml</system-err></testcase><testcase classname="CVE-2017-7657" name="pkg:maven/org.eclipse.jetty/jetty-util@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-util/pom.xml</system-err></testcase><testcase classname="CVE-2017-7656" name="pkg:maven/org.eclipse.jetty/jetty-util@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), HTTP/0.9 is handled poorly. An HTTP/1 style request line (i.e. method space URI space version) that declares a version of HTTP/0.9 was accepted and treated as a 0.9 request. If deployed behind an intermediary that also accepted and passed through the 0.9 version (but did not act on it), then the response sent could be interpreted by the intermediary as HTTP/1 headers. This could be used to poison the cache if the server allowed the origin client to generate arbitrary content in the response.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-util/pom.xml</system-err></testcase><testcase classname="CVE-2021-28165" name="pkg:maven/org.eclipse.jetty/jetty-util@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-util/pom.xml</system-err></testcase><testcase classname="CVE-2019-10247" name="pkg:maven/org.eclipse.jetty/jetty-util@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty version 7.x, 8.x, 9.2.27 and older, 9.3.26 and older, and 9.4.16 and older, the server running on any OS and Jetty version combination will reveal the configured fully qualified directory base resource location on the output of the 404 error for not finding a Context that matches the requested path. The default server behavior on jetty-distribution and jetty-home will include at the end of the Handler tree a DefaultHandler, which is responsible for reporting this 404 error, it presents the various configured contexts as HTML for users to click through to. This produced HTML includes output that contains the configured fully qualified directory base resource location for each context.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-util/pom.xml</system-err></testcase><testcase classname="CVE-2021-28169" name="pkg:maven/org.eclipse.jetty/jetty-util@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, it is possible for requests to the ConcatServlet with a doubly encoded path to access protected resources within the WEB-INF directory. For example a request to `/concat?/%2557EB-INF/web.xml` can retrieve the web.xml file. This can reveal sensitive information regarding the implementation of a web application.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-util/pom.xml</system-err></testcase><testcase classname="CVE-2018-12536" name="pkg:maven/org.eclipse.jetty/jetty-util@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn&apos;t match a dynamic url-pattern, and is eventually handled by the DefaultServlet&apos;s static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-util/pom.xml</system-err></testcase><testcase classname="CVE-2020-27216" name="pkg:maven/org.eclipse.jetty/jetty-util@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty versions 1.0 thru 9.4.32.v20200930, 10.0.0.alpha1 thru 10.0.0.beta2, and 11.0.0.alpha1 thru 11.0.0.beta2O, on Unix like systems, the system&apos;s temporary directory is shared between all users on that system. A collocated user can observe the process of creating a temporary sub directory in the shared temporary directory and race to complete the creation of the temporary subdirectory. If the attacker wins the race then they will have read and write permission to the subdirectory used to unpack web applications, including their WEB-INF/lib jar files and JSP files. If any code is ever executed out of this temporary directory, this can lead to a local privilege escalation vulnerability.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-util/pom.xml</system-err></testcase><testcase classname="CVE-2019-10241" name="pkg:maven/org.eclipse.jetty/jetty-util@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-util/pom.xml</system-err></testcase></testsuite><testsuite failures="0" id="57" name="/tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-webapp/pom.xml" package="jetty-runner.jar (shaded: org.eclipse.jetty:jetty-webapp:9.2.9.v20150224)" skipped="10" tests="10" timestamp="2021-09-27T06:07:56.437852"><testcase classname="CVE-2017-7658" name="pkg:maven/org.eclipse.jetty/jetty-webapp@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-webapp/pom.xml</system-err></testcase><testcase classname="CVE-2021-34428" name="pkg:maven/org.eclipse.jetty/jetty-webapp@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, if an exception is thrown from the SessionListener#sessionDestroyed() method, then the session ID is not invalidated in the session ID manager. On deployments with clustered sessions and multiple contexts this can result in a session not being invalidated. This can result in an application used on a shared computer being left logged in.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-webapp/pom.xml</system-err></testcase><testcase classname="CVE-2017-7657" name="pkg:maven/org.eclipse.jetty/jetty-webapp@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-webapp/pom.xml</system-err></testcase><testcase classname="CVE-2017-7656" name="pkg:maven/org.eclipse.jetty/jetty-webapp@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), HTTP/0.9 is handled poorly. An HTTP/1 style request line (i.e. method space URI space version) that declares a version of HTTP/0.9 was accepted and treated as a 0.9 request. If deployed behind an intermediary that also accepted and passed through the 0.9 version (but did not act on it), then the response sent could be interpreted by the intermediary as HTTP/1 headers. This could be used to poison the cache if the server allowed the origin client to generate arbitrary content in the response.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-webapp/pom.xml</system-err></testcase><testcase classname="CVE-2021-28165" name="pkg:maven/org.eclipse.jetty/jetty-webapp@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-webapp/pom.xml</system-err></testcase><testcase classname="CVE-2019-10247" name="pkg:maven/org.eclipse.jetty/jetty-webapp@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty version 7.x, 8.x, 9.2.27 and older, 9.3.26 and older, and 9.4.16 and older, the server running on any OS and Jetty version combination will reveal the configured fully qualified directory base resource location on the output of the 404 error for not finding a Context that matches the requested path. The default server behavior on jetty-distribution and jetty-home will include at the end of the Handler tree a DefaultHandler, which is responsible for reporting this 404 error, it presents the various configured contexts as HTML for users to click through to. This produced HTML includes output that contains the configured fully qualified directory base resource location for each context.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-webapp/pom.xml</system-err></testcase><testcase classname="CVE-2021-28169" name="pkg:maven/org.eclipse.jetty/jetty-webapp@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, it is possible for requests to the ConcatServlet with a doubly encoded path to access protected resources within the WEB-INF directory. For example a request to `/concat?/%2557EB-INF/web.xml` can retrieve the web.xml file. This can reveal sensitive information regarding the implementation of a web application.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-webapp/pom.xml</system-err></testcase><testcase classname="CVE-2018-12536" name="pkg:maven/org.eclipse.jetty/jetty-webapp@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn&apos;t match a dynamic url-pattern, and is eventually handled by the DefaultServlet&apos;s static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-webapp/pom.xml</system-err></testcase><testcase classname="CVE-2020-27216" name="pkg:maven/org.eclipse.jetty/jetty-webapp@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty versions 1.0 thru 9.4.32.v20200930, 10.0.0.alpha1 thru 10.0.0.beta2, and 11.0.0.alpha1 thru 11.0.0.beta2O, on Unix like systems, the system&apos;s temporary directory is shared between all users on that system. A collocated user can observe the process of creating a temporary sub directory in the shared temporary directory and race to complete the creation of the temporary subdirectory. If the attacker wins the race then they will have read and write permission to the subdirectory used to unpack web applications, including their WEB-INF/lib jar files and JSP files. If any code is ever executed out of this temporary directory, this can lead to a local privilege escalation vulnerability.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-webapp/pom.xml</system-err></testcase><testcase classname="CVE-2019-10241" name="pkg:maven/org.eclipse.jetty/jetty-webapp@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-webapp/pom.xml</system-err></testcase></testsuite><testsuite failures="0" id="58" name="/tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-xml/pom.xml" package="jetty-runner.jar (shaded: org.eclipse.jetty:jetty-xml:9.2.9.v20150224)" skipped="10" tests="10" timestamp="2021-09-27T06:07:56.437852"><testcase classname="CVE-2017-7658" name="pkg:maven/org.eclipse.jetty/jetty-xml@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-xml/pom.xml</system-err></testcase><testcase classname="CVE-2021-34428" name="pkg:maven/org.eclipse.jetty/jetty-xml@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, if an exception is thrown from the SessionListener#sessionDestroyed() method, then the session ID is not invalidated in the session ID manager. On deployments with clustered sessions and multiple contexts this can result in a session not being invalidated. This can result in an application used on a shared computer being left logged in.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-xml/pom.xml</system-err></testcase><testcase classname="CVE-2017-7657" name="pkg:maven/org.eclipse.jetty/jetty-xml@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-xml/pom.xml</system-err></testcase><testcase classname="CVE-2017-7656" name="pkg:maven/org.eclipse.jetty/jetty-xml@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), HTTP/0.9 is handled poorly. An HTTP/1 style request line (i.e. method space URI space version) that declares a version of HTTP/0.9 was accepted and treated as a 0.9 request. If deployed behind an intermediary that also accepted and passed through the 0.9 version (but did not act on it), then the response sent could be interpreted by the intermediary as HTTP/1 headers. This could be used to poison the cache if the server allowed the origin client to generate arbitrary content in the response.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-xml/pom.xml</system-err></testcase><testcase classname="CVE-2021-28165" name="pkg:maven/org.eclipse.jetty/jetty-xml@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-xml/pom.xml</system-err></testcase><testcase classname="CVE-2019-10247" name="pkg:maven/org.eclipse.jetty/jetty-xml@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty version 7.x, 8.x, 9.2.27 and older, 9.3.26 and older, and 9.4.16 and older, the server running on any OS and Jetty version combination will reveal the configured fully qualified directory base resource location on the output of the 404 error for not finding a Context that matches the requested path. The default server behavior on jetty-distribution and jetty-home will include at the end of the Handler tree a DefaultHandler, which is responsible for reporting this 404 error, it presents the various configured contexts as HTML for users to click through to. This produced HTML includes output that contains the configured fully qualified directory base resource location for each context.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-xml/pom.xml</system-err></testcase><testcase classname="CVE-2021-28169" name="pkg:maven/org.eclipse.jetty/jetty-xml@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>For Eclipse Jetty versions &lt;= 9.4.40, &lt;= 10.0.2, &lt;= 11.0.2, it is possible for requests to the ConcatServlet with a doubly encoded path to access protected resources within the WEB-INF directory. For example a request to `/concat?/%2557EB-INF/web.xml` can retrieve the web.xml file. This can reveal sensitive information regarding the implementation of a web application.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-xml/pom.xml</system-err></testcase><testcase classname="CVE-2018-12536" name="pkg:maven/org.eclipse.jetty/jetty-xml@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn&apos;t match a dynamic url-pattern, and is eventually handled by the DefaultServlet&apos;s static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-xml/pom.xml</system-err></testcase><testcase classname="CVE-2020-27216" name="pkg:maven/org.eclipse.jetty/jetty-xml@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty versions 1.0 thru 9.4.32.v20200930, 10.0.0.alpha1 thru 10.0.0.beta2, and 11.0.0.alpha1 thru 11.0.0.beta2O, on Unix like systems, the system&apos;s temporary directory is shared between all users on that system. A collocated user can observe the process of creating a temporary sub directory in the shared temporary directory and race to complete the creation of the temporary subdirectory. If the attacker wins the race then they will have read and write permission to the subdirectory used to unpack web applications, including their WEB-INF/lib jar files and JSP files. If any code is ever executed out of this temporary directory, this can lead to a local privilege escalation vulnerability.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-xml/pom.xml</system-err></testcase><testcase classname="CVE-2019-10241" name="pkg:maven/org.eclipse.jetty/jetty-xml@9.2.9.v20150224"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP). file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.</system-out><system-err>location: /tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.eclipse.jetty/jetty-xml/pom.xml</system-err></testcase></testsuite><testsuite failures="0" id="59" name="/tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.glassfish.web/javax.servlet.jsp.jstl/pom.xml" package="jetty-runner.jar (shaded: org.glassfish.web:javax.servlet.jsp.jstl:1.2.2)" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="jetty-runner.jar (shaded: org.glassfish.web:javax.servlet.jsp.jstl:1.2.2)"/></testsuite><testsuite failures="0" id="60" name="/tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.glassfish.web/javax.servlet.jsp/pom.xml" package="jetty-runner.jar (shaded: org.glassfish.web:javax.servlet.jsp:2.3.2)" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="jetty-runner.jar (shaded: org.glassfish.web:javax.servlet.jsp:2.3.2)"/></testsuite><testsuite failures="0" id="61" name="/tmp/image-unpacked/petstore/jetty-runner.jar/META-INF/maven/org.glassfish/javax.el/pom.xml" package="jetty-runner.jar (shaded: org.glassfish:javax.el:3.0.0)" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="jetty-runner.jar (shaded: org.glassfish:javax.el:3.0.0)"/></testsuite><testsuite failures="0" id="62" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jsr305-3.0.2.jar" package="jsr305-3.0.2.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="jsr305-3.0.2.jar"/></testsuite><testsuite failures="0" id="63" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/jsr311-api-1.1.1.jar" package="jsr311-api-1.1.1.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="jsr311-api-1.1.1.jar"/></testsuite><testsuite failures="0" id="64" name="/tmp/image-unpacked/usr/local/openjdk-8/lib/jsse.jar" package="jsse.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="jsse.jar"/></testsuite><testsuite failures="0" id="65" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar" package="listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar"/></testsuite><testsuite failures="0" id="66" name="/tmp/image-unpacked/usr/local/openjdk-8/lib/security/policy/limited/local_policy.jar" package="local_policy.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="local_policy.jar"/></testsuite><testsuite failures="0" id="67" name="/tmp/image-unpacked/usr/local/openjdk-8/lib/security/policy/unlimited/local_policy.jar" package="local_policy.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="local_policy.jar"/></testsuite><testsuite failures="0" id="68" name="/tmp/image-unpacked/usr/local/openjdk-8/lib/ext/localedata.jar" package="localedata.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="localedata.jar"/></testsuite><testsuite failures="1" id="69" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/logback-classic-1.0.1.jar" package="logback-classic-1.0.1.jar" skipped="1" tests="2" timestamp="2021-09-27T06:07:56.437852"><testcase classname="CVE-2017-5929" name="pkg:maven/ch.qos.logback/logback-classic@1.0.1"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>QOS.ch Logback before 1.2.0 has a serialization vulnerability affecting the SocketServer and ServerSocketReceiver components.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/logback-classic-1.0.1.jar</system-err></testcase><testcase classname="CVE-2017-5929" name="pkg:maven/ch.qos.logback/logback-classic@1.0.1"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>QOS.ch Logback before 1.2.0 has a serialization vulnerability affecting the SocketServer and ServerSocketReceiver components.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/logback-classic-1.0.1.jar</system-err></testcase></testsuite><testsuite failures="1" id="70" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/logback-core-1.0.1.jar" package="logback-core-1.0.1.jar" skipped="1" tests="2" timestamp="2021-09-27T06:07:56.437852"><testcase classname="CVE-2017-5929" name="pkg:maven/ch.qos.logback/logback-core@1.0.1"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>QOS.ch Logback before 1.2.0 has a serialization vulnerability affecting the SocketServer and ServerSocketReceiver components.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/logback-core-1.0.1.jar</system-err></testcase><testcase classname="CVE-2017-5929" name="pkg:maven/ch.qos.logback/logback-core@1.0.1"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>QOS.ch Logback before 1.2.0 has a serialization vulnerability affecting the SocketServer and ServerSocketReceiver components.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/logback-core-1.0.1.jar</system-err></testcase></testsuite><testsuite failures="0" id="71" name="/tmp/image-unpacked/usr/local/openjdk-8/lib/management-agent.jar" package="management-agent.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="management-agent.jar"/></testsuite><testsuite failures="0" id="72" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/mimepull-1.6.jar" package="mimepull-1.6.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="mimepull-1.6.jar"/></testsuite><testsuite failures="0" id="73" name="/tmp/image-unpacked/usr/local/openjdk-8/lib/ext/nashorn.jar" package="nashorn.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="nashorn.jar"/></testsuite><testsuite failures="0" id="74" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/reflections-0.9.11.jar" package="reflections-0.9.11.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="reflections-0.9.11.jar"/></testsuite><testsuite failures="0" id="75" name="/tmp/image-unpacked/usr/local/openjdk-8/lib/resources.jar" package="resources.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="resources.jar"/></testsuite><testsuite failures="0" id="76" name="/tmp/image-unpacked/usr/local/openjdk-8/lib/rt.jar" package="rt.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="rt.jar"/></testsuite><testsuite failures="0" id="77" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/servlet-api-2.5.jar" package="servlet-api-2.5.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="servlet-api-2.5.jar"/></testsuite><testsuite failures="0" id="78" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/slf4j-api-1.6.4.jar" package="slf4j-api-1.6.4.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="slf4j-api-1.6.4.jar"/></testsuite><testsuite failures="1" id="79" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/snakeyaml-1.23.jar" package="snakeyaml-1.23.jar" skipped="1" tests="2" timestamp="2021-09-27T06:07:56.437852"><testcase classname="CVE-2017-18640" name="pkg:maven/org.yaml/snakeyaml@1.23"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>The Alias feature in SnakeYAML 1.18 allows entity expansion during a load operation, a related issue to CVE-2003-1564.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/snakeyaml-1.23.jar</system-err></testcase><testcase classname="CVE-2017-18640" name="pkg:maven/org.yaml/snakeyaml@1.23"><skipped message="file name: jetty-server-9.4.31.v20200723.jar
   Teams (e.g. Christopher has analyized it as a FP)" /><system-out>The Alias feature in SnakeYAML 1.18 allows entity expansion during a load operation, a related issue to CVE-2003-1564.</system-out><system-err>location: /tmp/image-unpacked/petstore/webapp/WEB-INF/lib/snakeyaml-1.23.jar</system-err></testcase></testsuite><testsuite failures="0" id="80" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/stax-api-1.0-2.jar" package="stax-api-1.0-2.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="stax-api-1.0-2.jar"/></testsuite><testsuite failures="0" id="81" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/stax-api-1.0.1.jar" package="stax-api-1.0.1.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="stax-api-1.0.1.jar"/></testsuite><testsuite failures="0" id="82" name="/tmp/image-unpacked/usr/local/openjdk-8/lib/ext/sunec.jar" package="sunec.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="sunec.jar"/></testsuite><testsuite failures="0" id="83" name="/tmp/image-unpacked/usr/local/openjdk-8/lib/ext/sunjce_provider.jar" package="sunjce_provider.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="sunjce_provider.jar"/></testsuite><testsuite failures="0" id="84" name="/tmp/image-unpacked/usr/local/openjdk-8/lib/ext/sunpkcs11.jar" package="sunpkcs11.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="sunpkcs11.jar"/></testsuite><testsuite failures="0" id="85" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/swagger-annotations-1.5.24.jar" package="swagger-annotations-1.5.24.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="swagger-annotations-1.5.24.jar"/></testsuite><testsuite failures="0" id="86" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/swagger-core-1.5.24.jar" package="swagger-core-1.5.24.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="swagger-core-1.5.24.jar"/></testsuite><testsuite failures="0" id="87" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/swagger-jaxrs-1.5.24.jar" package="swagger-jaxrs-1.5.24.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="swagger-jaxrs-1.5.24.jar"/></testsuite><testsuite failures="0" id="88" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/swagger-jersey-jaxrs-1.5.24.jar" package="swagger-jersey-jaxrs-1.5.24.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="swagger-jersey-jaxrs-1.5.24.jar"/></testsuite><testsuite failures="0" id="89" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/swagger-models-1.5.24.jar" package="swagger-models-1.5.24.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="swagger-models-1.5.24.jar"/></testsuite><testsuite failures="0" id="90" name="/tmp/image-unpacked/petstore/webapp/WEB-INF/lib/validation-api-1.1.0.Final.jar" package="validation-api-1.1.0.Final.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="validation-api-1.1.0.Final.jar"/></testsuite><testsuite failures="0" id="91" name="/tmp/image-unpacked/usr/local/openjdk-8/lib/ext/zipfs.jar" package="zipfs.jar" skipped="0" tests="1" timestamp="2021-09-27T06:07:56.437852"><testcase classname="dependency-check" name="zipfs.jar"/></testsuite></testsuites>